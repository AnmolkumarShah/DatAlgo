{"version":3,"sources":["material-ui-components/accordian.jsx","material-ui-components/alertDialog.jsx","material-ui-components/output.jsx","components/code-editor/editor.jsx","material-ui-components/tab.jsx","material-ui-components/info.jsx","material-ui-components/floatingButton.jsx","material-ui-components/information.jsx","data.js","components/search-algorithm/BinarySearch/binary-search.jsx","components/sorting-algorithm/helper.jsx","components/sorting-algorithm/bar/bar.jsx","components/sorting-algorithm/colorIndicator/colorIndicator.jsx","components/sorting-algorithm/controller/controller.jsx","components/sorting-algorithm/bubble-sort/bubble-sort.jsx","components/sorting-algorithm/insertion-sort/insertion-sort.jsx","components/sorting-algorithm/selection-sort/selection-sort.jsx","components/sorting-algorithm/quick-sort/quick-sort.jsx","homepage/Algorithms.jsx","homepage/algorithmsData.js","homepage/footer/Member.jsx","homepage/footer/Footer.jsx","homepage/homepage.jsx","components/path-finding/Node.jsx","components/path-finding/algorithms/dijkstra.js","components/path-finding/path-finding.jsx","components/tree/Tree.js","components/tree/TraverseList.jsx","components/tree/BinaryTree.jsx","components/avl-tree/avl-tree.js","components/avl-tree/AVLTrees.jsx","components/singleLinkedList/singleLinkedListClass.js","components/singleLinkedList/singleLinkedList.jsx","components/array/element/ArrayElement.jsx","components/errorMessage/Warning.jsx","components/array/Array.jsx","components/feedback-form/common/feedback.jsx","components/stack/Stack.jsx","components/feedback-form/common/signup.jsx","components/feedback-form/common/login.jsx","components/feedback-form/common/logout.jsx","components/search-algorithm/LinearSearch/LinearSearch.jsx","components/que/Que.jsx","material-ui-components/menu.jsx","material-ui-components/drawer.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleAccordion","name","array","classes","type","className","Accordion","AccordionSummary","expandIcon","aria-controls","id","Typography","AccordionDetails","List","component","aria-label","map","item","ListItem","button","target","Option","style","textDecoration","padding","to","AlertDialog","open","handleClose","title","content","code","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","color","autoFocus","Output","Editor","language","value","useState","setCode","setOpen","output","setOutput","setTitle","token","setToken","setTheme","wait","setWait","useEffect","t","localStorage","getItem","toast","info","runHandler","a","backend","fetch","method","headers","Authorization","body","JSON","stringify","sourcecode","result","json","responseJson","error","message","stdout","htmlFor","onChange","e","selected","placeholder","mode","showPrintMargin","highlightActiveLine","defaultValue","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","CircularProgress","TabPanel","props","children","index","other","role","hidden","Box","p","a11yProps","flexGrow","backgroundColor","palette","background","paper","SimpleTabs","codeData","console","log","React","setValue","AppBar","position","Tabs","event","newValue","Tab","label","cpp","java","Chip","python","Info","intro","margin","spacing","right","bottom","zIndex","extendedIcon","marginRight","FloatingActionButtonSize","click","Fab","Information","state","setState","toggleDrawer","anchor","key","prev","Fragment","SwipeableDrawer","onOpen","stack","queue","sll","ls","bs","bso","is","ss","qs","bt","avl","pf","BinarySearch","cellArray","setCellArray","TargetSelected","setTargetSelected","isFound","setIsFound","setStack","displayStack","setDisplayStack","executionStack","setExecutionStack","valueArray","start","i","push","mid","Math","floor","length","low","high","random","toString","indexOf","active","handleReset","updatedCellArray","cellStyle","element","filter","handleSetTarget","oldCellArray","forEach","update","shift","variant","obj","pop","getWidth","noBars","parseInt","Bar","height","returnColor","ColorIndicator","indicator","Controller","resetArray","operation","handleSpeedChange","handleSizeChange","class","BubbleSort","forwardRef","ref","size","noController","setArray","animationSpeed","setAnimationSpeed","setNoBars","animations","considerColor","compareColor","swapColor","sortedColor","normalMargin","min","max","temp","Array","from","document","getElementsByClassName","useImperativeHandle","bubbleSort","j","animation","compute","arrayBar","speed","barIdxOne","barIdxTwo","barOne","barTwo","barOneStyle","barTwoStyle","setTimeout","temp2","textContent","idx","InsertionSort","keySelectionColor","memoryOverridingColor","insertionSort","SelectionSort","j_variable","k_variable","k","QuickSort","pivotColor","i_Color","j_Color","swap","quick","l","h","pivot","partition","quickSort","minWidth","transition","boxShadow","media","minHeight","colorHeading","maxHeight","border","Algorithms","Card","url","CardActionArea","CardMedia","image","CardContent","algorithmsData","Member","href","LinkedInUrl","data","sourceCode","tech","Footer","memb","Homepage","paddingTop","gap","algo","Node","isStart","isTarget","row","col","isWall","onMouseDown","onMouseEnter","onMouseUp","extraClasses","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","node","getAllNodes","sortNodesByDistance","closestNode","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","neighbor","getUnvisitedNeighbors","previousNode","PathFinding","setNodes","mouseIsPressed","setMouseIsPressed","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","animateShortestPath","nodesInShortestPathOrder","getElementById","getNewGridWithWallToggled","newGrid","slice","newNode","init","vertical","horizontal","currentNode","n","handleMouseDown","handleMouseEnter","animateDijkstra","unshift","getNodesInShortestPathOrder","alt","src","this","BinaryTree","traverseList","rchild","lchild","preOrder","postOrder","inOrder","Q","TraversedList","list","TransitionGroup","num","CSSTransition","timeout","classNames","t1","BTree","setData","traverlist","setTraverlist","treeData","display","Delete","animateNode","alert","animate","updatedList","animated","duration","svgProps","transform","textProps","clearTraverseList","levelOrder","getTraverseList","AVLTree","r","q","NodeHeight","inPre","inSucc","balanceFactor","LLRotation","LRRotation","RRRotation","RLRotation","insert","hl","hr","pr","prl","pl","plr","AVLTrees","considerTree","setConsiderTree","isCreated","setCreated","toDel","setToDel","rNode","gProps","refactor","tree","rootvalue","prompt","isNaN","v","getRoot","varient","onSubmit","preventDefault","nodeProps","SLinkedList","head","tail","insertBack","val","delete","insertFront","prevChild","tempNew","SingleLinkedList","setSll","setIsStart","setRender","setInsertBack","setInsertFront","insertAfterValue","setInsertAfterValue","insertAfterIdx","setInsertAfterIdx","deleteIndex","setDeleteIndex","updateData","nodeShape","rx","insertAfter","Reverse","ArrayElement","elementClass","textAlign","elementIndex","useStyle","titleColorBg","contentColor","letterSpacing","Warning","fullWidth","maxWidth","Arr","initialColor","minElementColor","maxElementColor","InitialElements","noElement","setNoElement","elements","setElements","setIndex","newElement","setNewElement","end","generateRandomArray","errorMessage","setErrorMessage","warningOpen","setWarningOpen","heighlightAction","delay","bar","oldItems","splice","addElement","ele","deleteFromIndex","delidx","FeedbackForm","email","setEmail","description","setDescription","err","setErr","done","setDone","handleSubmit","desc","param","msg","backgroundImage","overflow","backgroundSize","rows","Stack","temps","SignupForm","setName","password","setPassword","success","history","autoComplete","LoginForm","setItem","Logout","removeItem","LinearSearch","abc","searchElement","Que","enqueueColor","arrow","SimpleMenu","fun","anchorEl","setAnchorEl","aria-haspopup","currentTarget","keepMounted","Boolean","MenuItem","link","drawerWidth","appBar","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","marginTop","contentShift","DrawerLeft","useTheme","login","setLogin","window","addEventListener","themeBack","overflowX","CssBaseline","clsx","Toolbar","IconButton","edge","noWrap","Drawer","direction","Divider","ListItemIcon","path","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e6f4f537.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function SimpleAccordion({ name, array, type }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel2a-content\"\r\n          id=\"panel2a-header\"\r\n        >\r\n          <Typography className={classes.heading}>{name}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n            {array.map((item) => {\r\n              return (\r\n                <ListItem button>\r\n                  <Option target={item.target} name={item.name} />\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Option = ({ target, name }) => {\r\n  return (\r\n    <Link\r\n      style={{\r\n        textDecoration: \"none\",\r\n        padding: \"0px 15px\",\r\n        fontSize: \"20px\",\r\n      }}\r\n      to={target}\r\n    >\r\n      {name}\r\n    </Link>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AlertDialog({\r\n  open,\r\n  handleClose,\r\n  title,\r\n  content,\r\n  code = \"false\",\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          {content}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function Output({\r\n  open,\r\n  handleClose,\r\n  title,\r\n  content,\r\n  code = \"false\",\r\n}) {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n      <DialogContent>\r\n        <pre>{content}</pre>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-python\";\r\nimport \"ace-builds/src-noconflict/mode-java\";\r\nimport \"ace-builds/src-noconflict/mode-c_cpp\";\r\n\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\r\nimport \"ace-builds/src-noconflict/theme-tomorrow_night_blue\";\r\nimport \"ace-builds/src-noconflict/theme-twilight\";\r\nimport \"ace-builds/src-noconflict/theme-xcode\";\r\nimport \"ace-builds/src-noconflict/theme-nord_dark\";\r\nimport \"ace-builds/src-noconflict/theme-terminal\";\r\n\r\nimport Output from \"../../material-ui-components/output\";\r\nimport \"./editor.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Editor = ({ language = \"python\", value }) => {\r\n  const backend = \"https://datalgo.herokuapp.com/\";\r\n  const [code, setCode] = useState(\"\");\r\n  const changeHandler = (e) => {\r\n    setCode(e);\r\n  };\r\n  const [open, setOpen] = useState(false);\r\n  const [output, setOutput] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [token, setToken] = useState(null);\r\n  const [theme, setTheme] = useState(\"terminal\");\r\n  const [wait, setWait] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(false);\r\n    const t = localStorage.getItem(\"token\");\r\n    setToken(t);\r\n\r\n    if (value) {\r\n      setCode(value);\r\n    }\r\n\r\n    language === \"python\" &&\r\n      toast.info(\"Only supports Python Programming language\");\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const runHandler = async () => {\r\n    setWait(true);\r\n    const url = backend + \"interprete/run\";\r\n    const method = \"POST\";\r\n    try {\r\n      const result = await fetch(url, {\r\n        method: method,\r\n        headers: { \"Content-Type\": \"application/json\", Authorization: token },\r\n        body: JSON.stringify({\r\n          sourcecode: code,\r\n        }),\r\n      });\r\n      const responseJson = await result.json();\r\n\r\n      if (responseJson.error) {\r\n        setOutput(responseJson.message + \", Please login before running code\");\r\n        setOpen(true);\r\n        setTitle(\"You get an error\");\r\n        setWait(false);\r\n        return;\r\n      }\r\n      setOutput(responseJson.output.stdout);\r\n      setTitle(\"Code Output\");\r\n      setWait(false);\r\n      setOpen(true);\r\n    } catch (e) {\r\n      setTitle(\"You get an error\");\r\n      setOutput(e.message);\r\n      setWait(false);\r\n      setOpen(true);\r\n    }\r\n  };\r\n  const themeHandler = (e) => {\r\n    setTheme(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Output\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title={title}\r\n        content={output}\r\n        code={true}\r\n      />\r\n\r\n      <div className=\"editor-container\">\r\n        <div className=\"form-group\">\r\n          <label className=\"text-dark\" htmlFor=\"exampleFormControlSelect2\">\r\n            Theme\r\n          </label>\r\n          <select\r\n            onChange={themeHandler}\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlSelect2\"\r\n          >\r\n            <option>monokai</option>\r\n            <option>solarized_light</option>\r\n            <option>nord_dark</option>\r\n            <option>xcode</option>\r\n            <option>twilight</option>\r\n            <option>tomorrow_night_blue</option>\r\n            <option selected>terminal</option>\r\n          </select>\r\n        </div>\r\n        <AceEditor\r\n          className=\"editor-item\"\r\n          placeholder=\"\"\r\n          mode={language}\r\n          theme={theme}\r\n          width=\"100%\"\r\n          name=\"blah2\"\r\n          onChange={changeHandler}\r\n          fontSize={14}\r\n          showPrintMargin={true}\r\n          // showGutter={true}\r\n          highlightActiveLine={true}\r\n          defaultValue={value}\r\n          value={code}\r\n          setOptions={{\r\n            enableBasicAutocompletion: true,\r\n            enableLiveAutocompletion: true,\r\n            enableSnippets: true,\r\n            showLineNumbers: true,\r\n            tabSize: 2,\r\n          }}\r\n        />\r\n        {language === \"python\" && (\r\n          <button\r\n            onClick={runHandler}\r\n            className=\"btn btn-dark mt-1 editor-item\"\r\n          >\r\n            {wait ? <CircularProgress /> : \"Run\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Editor from \"../components/code-editor/editor\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SimpleTabs({ codeData }) {\r\n  console.log(codeData);\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar color=\"default\" position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"C++\" {...a11yProps(0)} />\r\n          <Tab label=\"Java\" {...a11yProps(1)} />\r\n          <Tab label=\"Python\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Editor language=\"c_cpp\" value={codeData.cpp} theme=\"solarized_light\" />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Editor language=\"java\" value={codeData.java} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Chip\r\n          className=\"mb-3\"\r\n          color=\"primary\"\r\n          label=\"you can run your python code\"\r\n        />\r\n        <Editor\r\n          language=\"python\"\r\n          value={codeData.python}\r\n          theme=\"solarized_light\"\r\n        />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport SimpleTabs from \"./tab\";\r\n\r\nexport default function Info({ codeData }) {\r\n  return (\r\n    <>\r\n      <h1>{codeData.name}</h1>\r\n      <p className=\"lead text-justify\">{codeData.intro}</p>\r\n      <SimpleTabs codeData={codeData} />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport InfoRounded from \"@material-ui/icons/InfoRounded\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    position: \"fixed\",\r\n    right: \"10px\",\r\n    bottom: \"5px\",\r\n    zIndex: \"10000\",\r\n    backgroundColor: \"red\",\r\n  },\r\n\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function FloatingActionButtonSize({ click }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Fab\r\n          onClick={() => click(\"bottom\")}\r\n          color=\"secondary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n        >\r\n          <InfoRounded />\r\n        </Fab>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Info from \"./info\";\r\nimport FloatingActionButtonSize from \"./floatingButton\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Information({ codeData }) {\r\n  const [state, setState] = React.useState({\r\n    bottom: false,\r\n  });\r\n\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    setToken(token);\r\n  });\r\n\r\n  const toggleDrawer = (anchor) => (event) => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    let prev = state.bottom;\r\n    setState({ ...state, [anchor]: !prev });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment key={\"bottom\"}>\r\n      <FloatingActionButtonSize\r\n        click={toggleDrawer(\"bottom\", true)}\r\n        value={state.bottom}\r\n      />\r\n      <SwipeableDrawer\r\n        anchor={\"bottom\"}\r\n        open={state[\"bottom\"]}\r\n        onClose={toggleDrawer(\"bottom\", false)}\r\n        onOpen={toggleDrawer(\"bottom\", true)}\r\n      >\r\n        {!token ? (\r\n          <div className=\"p-5\">\r\n            <h1 className=\"display-4\">Please login to view this content</h1>\r\n            <button className=\"ml-2 btn btn-info btn-lg\">\r\n              <Link className=\"text-light\" to=\"/login\">\r\n                Login\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"p-5\">\r\n            <Info codeData={codeData} />\r\n          </div>\r\n        )}\r\n      </SwipeableDrawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","const codeData = {\r\n  array: {\r\n    name: `Array Data Structure`,\r\n    intro: `An array is a collection of items stored at contiguous memory locations. The idea is to store multiple items of the same type together. This makes it easier to calculate the position of each element by simply adding an offset to a base value, i.e., the memory location of the first element of the array (generally denoted by the name of the array). The base value is index 0 and the difference between the two indexes is the offset.`,\r\n    cpp: `#include <stdio.h>\r\n\r\n#include <stdlib.h>\r\n\r\nint a[10], pos, elem;\r\n\r\nint n = 0;\r\n\r\nvoid create();\r\n\r\nvoid display();\r\n\r\nvoid insert();\r\n\r\nvoid del();\r\n\r\nvoid main()\r\n\r\n{\r\n\r\n    int choice;\r\n\r\n    while (1)\r\n\r\n    {\r\n\r\n        printf(\"\\n\\n~~~~MENU~~~~\");\r\n\r\n        printf(\"\\n=>1. Create an array of N integers\");\r\n\r\n        printf(\"\\n=>2. Display of array elements\");\r\n\r\n        printf(\"\\n=>3. Insert ELEM at a given POS\");\r\n\r\n        printf(\"\\n=>4. Delete an element at a given POS\");\r\n\r\n        printf(\"\\n=>5. Exit\");\r\n\r\n        printf(\"\\nEnter your choice: \");\r\n\r\n        scanf(\"%d\", &choice);\r\n\r\n        switch (choice)\r\n\r\n        {\r\n\r\n        case 1:\r\n            create();\r\n\r\n            break;\r\n\r\n        case 2:\r\n            display();\r\n\r\n            break;\r\n\r\n        case 3:\r\n            insert();\r\n\r\n            break;\r\n\r\n        case 4:\r\n            del();\r\n\r\n            break;\r\n\r\n        case 5:\r\n            exit(1);\r\n\r\n            break;\r\n\r\n        default:\r\n            printf(\"\\nPlease enter a valid choice:\");\r\n        }\r\n    }\r\n}\r\n\r\nvoid create()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    printf(\"\\nEnter the number of elements: \");\r\n\r\n    scanf(\"%d\", &n);\r\n\r\n    printf(\"\\nEnter the elements: \");\r\n\r\n    for (i = 0; i < n; i++)\r\n\r\n    {\r\n\r\n        scanf(\"%d\", &a[i]);\r\n    }\r\n}\r\n\r\nvoid display()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    if (n == 0)\r\n\r\n    {\r\n\r\n        printf(\"\\nNo elements to display\");\r\n\r\n        return;\r\n    }\r\n\r\n    printf(\"\\nArray elements are: \");\r\n\r\n    for (i = 0; i < n; i++)\r\n\r\n        printf(\"%d\\t \", a[i]);\r\n}\r\n\r\nvoid insert()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    if (n == 5)\r\n\r\n    {\r\n\r\n        printf(\"\\nArray is full. Insertion is not possible\");\r\n\r\n        return;\r\n    }\r\n\r\n    do\r\n\r\n    {\r\n\r\n        printf(\"\\nEnter a valid position where element to be inserted:    \");\r\n\r\n        scanf(\"%d\", &pos);\r\n\r\n    } while (pos > n);\r\n\r\n    printf(\"\\nEnter the value to be inserted:   \");\r\n\r\n    scanf(\"%d\", &elem);\r\n\r\n    for (i = n - 1; i >= pos; i--)\r\n\r\n    {\r\n\r\n        a[i + 1] = a[i];\r\n    }\r\n\r\n    a[pos] = elem;\r\n\r\n    n = n + 1;\r\n\r\n    display();\r\n}\r\n\r\n\r\nvoid del()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    if (n == 0)\r\n\r\n    {\r\n\r\n        printf(\"\\nArray is empty and no elements to delete\");\r\n\r\n        return;\r\n    }\r\n\r\n    do\r\n\r\n    {\r\n\r\n        printf(\"\\nEnter a valid position from where element to be deleted:    \");\r\n\r\n        scanf(\"%d\", &pos);\r\n\r\n    } while (pos >= n);\r\n\r\n    elem = a[pos];\r\n\r\n    printf(\"\\nDeleted element is : %d \\n\", elem);\r\n\r\n    for (i = pos; i < n - 1; i++)\r\n\r\n    {\r\n        a[i] = a[i + 1];\r\n    }\r\n\r\n    n = n - 1;\r\n\r\n    display();\r\n}\r\n\r\n\r\n\r\nArray using c++ :-\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nint *arr = new int[100], pos, elem;\r\n\r\nint n = 0;\r\n\r\nvoid create();\r\n\r\nvoid display();\r\n\r\nvoid insert();\r\n\r\nvoid del();\r\n\r\nint main()\r\n\r\n{\r\n\r\n    int choice;\r\n\r\n    while (1)\r\n\r\n    {\r\n\r\n        cout << \"\\n\\n~~~~MENU~~~~\";\r\n\r\n        cout << \"\\n=>1. Create an array of N integers\";\r\n\r\n        cout << \"\\n=>2. Display of array elements\";\r\n\r\n        cout << \"\\n=>3. Insert ELEM at arr given POS\";\r\n\r\n        cout << \"\\n=>4. Delete an element at arr given POS\";\r\n\r\n        cout << \"\\n=>5. Exit\";\r\n\r\n        cout << \"\\nEnter your choice: \";\r\n\r\n        cin >> choice;\r\n\r\n        switch (choice)\r\n\r\n        {\r\n\r\n        case 1:\r\n            create();\r\n\r\n            break;\r\n\r\n        case 2:\r\n            display();\r\n\r\n            break;\r\n\r\n        case 3:\r\n            insert();\r\n\r\n            break;\r\n\r\n        case 4:\r\n            del();\r\n\r\n            break;\r\n\r\n        case 5:\r\n            exit(1);\r\n\r\n            break;\r\n\r\n        default:\r\n            cout << \"\\nPlease enter arr valid choice:\";\r\n        }\r\n    }\r\n    return 0;\r\n}\r\n\r\nvoid create()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    cout << \"\\nEnter the number of elements: \";\r\n\r\n    cin >> n;\r\n\r\n    cout << \"\\nEnter the elements: \";\r\n\r\n    for (i = 0; i < n; i++)\r\n\r\n    {\r\n\r\n        cin >> arr[i];\r\n    }\r\n}\r\n\r\nvoid display()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    if (n == 0)\r\n\r\n    {\r\n\r\n        cout << \"\\nNo elements to display\";\r\n        return;\r\n    }\r\n\r\n    cout << \"\\nArray elements are: \";\r\n\r\n    for (i = 0; i < n; i++)\r\n\r\n        cout << \"\\t\" << arr[i];\r\n}\r\n\r\nvoid insert()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    if (n == 5)\r\n\r\n    {\r\n\r\n        cout << \"\\nArray is full. Insertion is not possible\";\r\n\r\n        return;\r\n    }\r\n\r\n    do\r\n\r\n    {\r\n\r\n        cout << \"\\nEnter arr valid position where element to be inserted:    \";\r\n\r\n        cin >> pos;\r\n\r\n    } while (pos > n);\r\n\r\n    cout << \"\\nEnter the value to be inserted:   \";\r\n\r\n    cin >> elem;\r\n\r\n    for (i = n - 1; i >= pos; i--)\r\n\r\n    {\r\n\r\n        arr[i + 1] = arr[i];\r\n    }\r\n\r\n    arr[pos] = elem;\r\n\r\n    n = n + 1;\r\n\r\n    display();\r\n}\r\n\r\nvoid del()\r\n\r\n{\r\n\r\n    int i;\r\n\r\n    if (n == 0)\r\n\r\n    {\r\n\r\n        cout << \"\\nArray is empty and no elements to delete\";\r\n\r\n        return;\r\n    }\r\n\r\n    do\r\n\r\n    {\r\n\r\n        cout << \"\\nEnter arr valid position from where element to be deleted:    \";\r\n\r\n        cin >> pos;\r\n\r\n    } while (pos >= n);\r\n\r\n    elem = arr[pos];\r\n\r\n    cout << \"\\nDeleted element is : %d \\n\", elem;\r\n\r\n    for (i = pos; i < n - 1; i++)\r\n\r\n    {\r\n        arr[i] = arr[i + 1];\r\n    }\r\n\r\n    n = n - 1;\r\n\r\n    display();\r\n}\r\n\r\n`,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  stack: {\r\n    name: `Stack Data Structure`,\r\n    intro: `Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out).\r\nThere are many real-life examples of a stack. Consider an example of plates stacked over one another in the canteen. The plate which is at the top is the first one to be removed, i.e. the plate which has been placed at the bottommost position remains in the stack for the longest period of time. So, it can be simply seen to follow LIFO(Last In First Out)/FILO(First In Last Out) order.\r\n`,\r\n    cpp: `#include <stdio.h>\r\n\r\n#include <stdlib.h>\r\n\r\n#define Size 4\r\n\r\nint Top = -1, inp_array[Size];\r\nvoid Push();\r\nvoid Pop();\r\nvoid show();\r\n\r\nint main()\r\n{\r\n    int choice;\r\n\r\n    while (1)\r\n    {\r\n        printf(\"\\nOperations performed by Stack\");\r\n        printf(\"\\n1.Push the element\\n2.Pop the element\\n3.Show\\n4.End\");\r\n        printf(\"\\n\\nEnter the choice:\");\r\n        scanf(\"%d\", &choice);\r\n\r\n        switch (choice)\r\n        {\r\n        case 1:\r\n            Push();\r\n            break;\r\n        case 2:\r\n            Pop();\r\n            break;\r\n        case 3:\r\n            show();\r\n            break;\r\n        case 4:\r\n            exit(0);\r\n\r\n        default:\r\n            printf(\"\\nInvalid choice!!\");\r\n        }\r\n    }\r\n}\r\n\r\nvoid Push()\r\n{\r\n    int x;\r\n\r\n    if (Top == Size - 1)\r\n    {\r\n        printf(\"\\nOverflow!!\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"\\nEnter element to be inserted to the stack:\");\r\n        scanf(\"%d\", &x);\r\n        Top = Top + 1;\r\n        inp_array[Top] = x;\r\n    }\r\n}\r\n\r\nvoid Pop()\r\n{\r\n    if (Top == -1)\r\n    {\r\n        printf(\"\\nUnderflow!!\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"\\nPopped element:  %d\", inp_array[Top]);\r\n        Top = Top - 1;\r\n    }\r\n}\r\n\r\nvoid show()\r\n{\r\n\r\n    if (Top == -1)\r\n    {\r\n        printf(\"\\nUnderflow!!\");\r\n    }\r\n    else\r\n    {\r\n        printf(\"\\nElements present in the stack: \\n\");\r\n        for (int i = Top; i >= 0; --i)\r\n            printf(\"%d\\n\", inp_array[i]);\r\n    }\r\n}\r\n\r\n\r\nStack using c++ :-\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n#define Size 10\r\n\r\nint Top = -1,\r\n    *inp_array = new int[Size];\r\nvoid Push();\r\nvoid Pop();\r\nvoid show();\r\n\r\nint main()\r\n{\r\n    int choice;\r\n\r\n    while (1)\r\n    {\r\n        cout << \"\\nOperations performed by Stack\";\r\n        cout << \"\\n1.Push the element\\n2.Pop the element\\n3.Show\\n4.End\";\r\n        cout << \"\\n\\nEnter the choice:\";\r\n        cin >> choice;\r\n\r\n        switch (choice)\r\n        {\r\n        case 1:\r\n            Push();\r\n            break;\r\n        case 2:\r\n            Pop();\r\n            break;\r\n        case 3:\r\n            show();\r\n            break;\r\n        case 4:\r\n            exit(0);\r\n\r\n        default:\r\n            cout << \"\\nInvalid choice!!\";\r\n        }\r\n    }\r\n}\r\n\r\nvoid Push()\r\n{\r\n    int x;\r\n\r\n    if (Top == Size - 1)\r\n    {\r\n        cout << \"\\nOverflow!!\";\r\n    }\r\n    else\r\n    {\r\n        cout << \"\\nEnter element to be inserted to the stack:\";\r\n        cin >> x;\r\n        Top = Top + 1;\r\n        inp_array[Top] = x;\r\n    }\r\n}\r\n\r\nvoid Pop()\r\n{\r\n    if (Top == -1)\r\n    {\r\n        cout << \"\\nUnderflow!!\";\r\n    }\r\n    else\r\n    {\r\n        cout << \"\\nPopped element: \", inp_array[Top];\r\n        Top = Top - 1;\r\n    }\r\n}\r\n\r\nvoid show()\r\n{\r\n\r\n    if (Top == -1)\r\n    {\r\n        cout << \"\\nUnderflow!!\";\r\n    }\r\n    else\r\n    {\r\n        cout << \"\\nElements present in the stack: \\n\";\r\n        for (int i = Top; i >= 0; --i)\r\n            cout << \"%d\\n\", inp_array[i];\r\n    }\r\n}\r\n`,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  queue: {\r\n    name: `Queue Data Structure`,\r\n    intro: `A Queue is a linear structure which follows a particular order in which the operations are performed. The order is First In First Out (FIFO). A good example of a queue is any queue of consumers for a resource where the consumer that came first is served first. The difference between stacks and queues is in removing. In a stack we remove the item the most recently added; in a queue, we remove the item the least recently added. It works on the principle of First In First Out.`,\r\n    cpp: `#include <stdio.h>\r\n#define SIZE 100\r\nvoid enqueue();\r\nvoid dequeue();\r\nvoid show();\r\nint inp_arr[SIZE];\r\nint Rear = -1;\r\nint Front = -1;\r\nmain()\r\n{\r\n    int ch;\r\n    while (1)\r\n    {\r\n        printf(\"1.Enqueue Operation\\n\");\r\n        printf(\"2.Dequeue Operation\\n\");\r\n        printf(\"3.Display the Queue\\n\");\r\n        printf(\"4.Exit\\n\");\r\n        printf(\"Enter your choice of operations : \");\r\n        scanf(\"%d\", &ch);\r\n        switch (ch)\r\n        {\r\n        case 1:\r\n            enqueue();\r\n            break;\r\n        case 2:\r\n            dequeue();\r\n            break;\r\n        case 3:\r\n            show();\r\n            break;\r\n        case 4:\r\n            exit(0);\r\n        default:\r\n            printf(\"Incorrect choice \\n\");\r\n        }\r\n    }\r\n}\r\n\r\nvoid enqueue()\r\n{\r\n    int insert_item;\r\n    if (Rear == SIZE - 1)\r\n        printf(\"Overflow \\n\");\r\n    else\r\n    {\r\n        if (Front == -1)\r\n\r\n            Front = 0;\r\n        printf(\"Element to be inserted in the Queue\\n : \");\r\n        scanf(\"%d\", &insert_item);\r\n        Rear = Rear + 1;\r\n        inp_arr[Rear] = insert_item;\r\n    }\r\n}\r\n\r\nvoid dequeue()\r\n{\r\n    if (Front == -1 || Front > Rear)\r\n    {\r\n        printf(\"Underflow \\n\");\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        printf(\"Element deleted from the Queue: %d\\n\", inp_arr[Front]);\r\n        Front = Front + 1;\r\n    }\r\n}\r\n\r\nvoid show()\r\n{\r\n\r\n    if (Front == -1)\r\n        printf(\"Empty Queue \\n\");\r\n    else\r\n    {\r\n        printf(\"Queue: \\n\");\r\n        for (int i = Front; i <= Rear; i++)\r\n            printf(\"%d \", inp_arr[i]);\r\n        printf(\"\\n\");\r\n    }\r\n}\r\n\r\n\r\nQueue using c++ :-\r\n\r\n#include <iostream>\r\nusing namespace std;\r\n#define SIZE 100\r\nvoid enqueue();\r\nvoid dequeue();\r\nvoid show();\r\nint *inp_arr = new int[SIZE];\r\nint Rear = -1;\r\nint Front = -1;\r\nmain()\r\n{\r\n    int ch;\r\n    while (1)\r\n    {\r\n        cout << \"1.Enqueue Operation\\n\";\r\n        cout << \"2.Dequeue Operation\\n\";\r\n        cout << \"3.Display the Queue\\n\";\r\n        cout << \"4.Exit\\n\";\r\n        cout << \"Enter your choice of operations : \";\r\n        cin >> ch;\r\n        switch (ch)\r\n        {\r\n        case 1:\r\n            enqueue();\r\n            break;\r\n        case 2:\r\n            dequeue();\r\n            break;\r\n        case 3:\r\n            show();\r\n            break;\r\n        case 4:\r\n            exit(0);\r\n        default:\r\n            cout << \"Incorrect choice \\n\";\r\n        }\r\n    }\r\n}\r\n\r\nvoid enqueue()\r\n{\r\n    int insert_item;\r\n    if (Rear == SIZE - 1)\r\n        cout << \"Overflow \\n\";\r\n    else\r\n    {\r\n        if (Front == -1)\r\n\r\n            Front = 0;\r\n        cout << \"Element to be inserted in the Queue\\n : \";\r\n        cin >> insert_item;\r\n        Rear = Rear + 1;\r\n        inp_arr[Rear] = insert_item;\r\n    }\r\n}\r\n\r\nvoid dequeue()\r\n{\r\n    if (Front == -1 || Front > Rear)\r\n    {\r\n        cout << \"Underflow \\n\";\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        cout << \"Element deleted from the Queue: %d\\n\", inp_arr[Front];\r\n        Front = Front + 1;\r\n    }\r\n}\r\n\r\nvoid show()\r\n{\r\n\r\n    if (Front == -1)\r\n        cout << \"Empty Queue \\n\";\r\n    else\r\n    {\r\n        cout << \"Queue: \\n\";\r\n        for (int i = Front; i <= Rear; i++)\r\n            cout << \"%d \", inp_arr[i];\r\n        cout << \"\\n\";\r\n    }\r\n}\r\n\r\n`,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   single linked list\r\n  sll: {\r\n    name: `Single Linked list`,\r\n    intro: `A linked list is a linear data structure, in which the elements are not stored at contiguous memory locations. The elements in a linked list are linked using pointers as shown in the below: Consider 4 nodes [A,B,C & D]\r\nSo in Linked List Data Structure, A is the head which is connected to the next block (i.e B) which is connected to C & the C block is connected to the D block respectively. \r\nIn simple words, a linked list consists of nodes where each node contains a data field and a reference(link) to the next node in the list.\r\n`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   linear search\r\n  ls: {\r\n    name: `Linear Search`,\r\n    intro: `A simple approach is to do a linear search, i.e  \r\n•\tStart from the leftmost element of arr[] and one by one compare x with each element of arr[]\r\n•\tIf x matches with an element, return the index.\r\n•\tIf x doesn’t match with any of elements, return -1.\r\n`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   binary Search\r\n  bs: {\r\n    name: `Binary Search`,\r\n    intro: `Given a sorted array arr[] of n elements, write a function to search a given element x in arr[].\r\nA simple approach is to do Linear Search. The time complexity of the above algorithm is O(n). Another approach to perform the same task is using Binary Search. \r\nBinary Search: Search a sorted array by repeatedly dividing the search interval in half. Begin with an interval covering the whole array. If the value of the search key is less than the item in the middle of the interval, narrow the interval to the lower half. Otherwise, narrow it to the upper half. Repeatedly check until the value is found or the interval is empty.\r\n\r\nThe idea of binary search is to use the information that the array is sorted and reduce the time complexity to O(Log n). \r\nWe basically ignore half of the elements just after one comparison.\r\n\r\n1.\tCompare x with the middle element.\r\n2.\tIf x matches with the middle element, we return the mid index.\r\n3.\tElse If x is greater than the mid element, then x can only lie in the right half subarray after the mid element. So we recur for the right half.\r\n4.\tElse (x is smaller) recur for the left half.\r\n`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   bubble sort\r\n  bso: {\r\n    name: `Bubble Sort`,\r\n    intro: `Bubble sort is a simple sorting algorithm. This sorting algorithm is comparison-based algorithm in which each pair of adjacent elements is compared and the elements are swapped if they are not in order. This algorithm is not suitable for large data sets as its average and worst-case complexity are of Ο(n2) where n is the number of items.`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   insertion Sort\r\n  is: {\r\n    name: `Insertion Sort`,\r\n    intro: `Insertion sort is a simple sorting algorithm that works similar to the way you sort playing cards in your hands. The array is virtually split into a sorted and an unsorted part. Values from the unsorted part are picked and placed at the correct position in the sorted part.\r\nAlgorithm \r\nTo sort an array of size n in ascending order: \r\n1: Iterate from arr[1] to arr[n] over the array. \r\n2: Compare the current element (key) to its predecessor. \r\n3: If the key element is smaller than its predecessor, compare it to the elements before. Move the greater elements one position up to make space for the swapped element.\r\n`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   Selection sort\r\n  ss: {\r\n    name: `Selection Sort`,\r\n    intro: `The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.\r\n1) The subarray which is already sorted.\r\n2) Remaining subarray which is unsorted.\r\nIn every iteration of selection sort, the minimum element (considering ascending order) from the unsorted subarray is picked and moved to the sorted subarray.\r\n`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   Quick Sort\r\n  qs: {\r\n    name: `Quick Sort`,\r\n    intro: `QuickSort is a Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot. There are many different versions of quickSort that pick pivot in different ways. \r\n1.\tAlways pick first element as pivot.\r\n2.\tAlways pick last element as pivot (implemented below)\r\n3.\tPick a random element as pivot.\r\n4.\tPick median as pivot.\r\nThe key process in quickSort is partition(). Target of partitions is, given an array and an element x of array as pivot, put x at its correct position in sorted array and put all smaller elements (smaller than x) before x, and put all greater elements (greater than x) after x. All this should be done in linear time.\r\n`,\r\n    cpp: ``,\r\n    java: ``,\r\n    python: ``,\r\n  },\r\n  //   binary tree\r\n  bt: {\r\n    name: `Binary Tree`,\r\n    intro: `A tree whose elements have at most 2 children is called a binary tree. Since each element in a binary tree can have only 2 children, we typically name them the left and right child.\r\n\r\nExample of Binary Tree Data Structure is: 1,2,3,4,5,6,7,8,9,10,11,12,13,14.\r\nA Binary Tree node contains following parts.\r\n1.\tData\r\n2.\tPointer to left child\r\n3.\tPointer to right child\r\n`,\r\n    cpp: `#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nstruct Node {\r\n\tint data;\r\n\tstruct Node* left;\r\n\tstruct Node* right;\r\n\r\n\t// val is the key or the value that\r\n\t// has to be added to the data part\r\n\tNode(int val)\r\n\t{\r\n\t\tdata = val;\r\n\r\n\t\t// Left and right child for node\r\n\t\t// will be initialized to null\r\n\t\tleft = NULL;\r\n\t\tright = NULL;\r\n\t}\r\n};\r\n\r\nint main()\r\n{\r\n\r\n\t/*create root*/\r\n\tstruct Node* root = new Node(1);\r\n\t/* following is the tree after above statement\r\n\r\n\t\t\t1\r\n\t\t\t/ \\\r\n\t\tNULL NULL\r\n\t*/\r\n\r\n\troot->left = new Node(2);\r\n\troot->right = new Node(3);\r\n\t/* 2 and 3 become left and right children of 1\r\n\t\t\t\t\t1\r\n\t\t\t\t/ \\\r\n\t\t\t\t2\t 3\r\n\t\t\t/ \\\t / \\\r\n\t\t\tNULL NULL NULL NULL\r\n\t*/\r\n\r\n\troot->left->left = new Node(4);\r\n\t/* 4 becomes left child of 2\r\n\t\t\t1\r\n\t\t\t/\t \\\r\n\t\t2\t 3\r\n\t\t/ \\\t / \\\r\n\t\t4 NULL NULL NULL\r\n\t\t/ \\\r\n\tNULL NULL\r\n\t*/\r\n\r\n\treturn 0;\r\n}\r\n`,\r\n    java: `/* Class containing left and right child of current\r\nnode and key value*/\r\nclass Node\r\n{\r\n\tint key;\r\n\tNode left, right;\r\n\r\n\tpublic Node(int item)\r\n\t{\r\n\t\tkey = item;\r\n\t\tleft = right = null;\r\n\t}\r\n}\r\n\r\n// A Java program to introduce Binary Tree\r\nclass BinaryTree\r\n{\r\n\t// Root of Binary Tree\r\n\tNode root;\r\n\r\n\t// Constructors\r\n\tBinaryTree(int key)\r\n\t{\r\n\t\troot = new Node(key);\r\n\t}\r\n\r\n\tBinaryTree()\r\n\t{\r\n\t\troot = null;\r\n\t}\r\n\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\tBinaryTree tree = new BinaryTree();\r\n\r\n\t\t/*create root*/\r\n\t\ttree.root = new Node(1);\r\n\r\n\t\t/* following is the tree after above statement\r\n\r\n\t\t\t1\r\n\t\t\t/ \\\r\n\t\tnull null\t */\r\n\r\n\t\ttree.root.left = new Node(2);\r\n\t\ttree.root.right = new Node(3);\r\n\r\n\t\t/* 2 and 3 become left and right children of 1\r\n\t\t\t1\r\n\t\t\t/\t \\\r\n\t\t2\t 3\r\n\t\t/ \\\t / \\\r\n\tnull null null null */\r\n\r\n\r\n\t\ttree.root.left.left = new Node(4);\r\n\t\t/* 4 becomes left child of 2\r\n\t\t\t\t\t1\r\n\t\t\t\t/\t \\\r\n\t\t\t2\t\t 3\r\n\t\t\t/ \\\t / \\\r\n\t\t\t4 null null null\r\n\t\t/ \\\r\n\t\tnull null\r\n\t\t*/\r\n\t}\r\n}\r\n`,\r\n    python: `# Python program to introduce Binary Tree\r\n\r\n# A class that represents an individual node in a\r\n# Binary Tree\r\nclass Node:\r\n\tdef __init__(self,key):\r\n\t\tself.left = None\r\n\t\tself.right = None\r\n\t\tself.val = key\r\n\r\n\r\n# create root\r\nroot = Node(1)\r\n''' following is the tree after above statement\r\n\t\t1\r\n\t/ \\\r\n\tNone None'''\r\n\r\nroot.left\t = Node(2);\r\nroot.right\t = Node(3);\r\n\r\n''' 2 and 3 become left and right children of 1\r\n\t\t1\r\n\t\t/ \\\r\n\t\t2\t 3\r\n\t/ \\ / \\\r\nNone None None None'''\r\n\r\n\r\nroot.left.left = Node(4);\r\n'''4 becomes left child of 2\r\n\t\t1\r\n\t/\t \\\r\n\t2\t\t 3\r\n\t/ \\\t / \\\r\n4 None None None\r\n/ \\\r\nNone None'''\r\n`,\r\n  },\r\n  //   avl tree\r\n  avl: {\r\n    name: `AVL Tree`,\r\n    intro: `AVL tree is a self-balancing Binary Search Tree (BST) where the difference between heights of left and right subtrees cannot be more than one for all nodes. \r\n\r\nExample: 12,8,18,11,17,5,4\r\n \r\nThe above tree is AVL because differences between heights of left and right subtrees for every node is less than or equal to 1.\r\nAn Example Tree that is NOT an AVL Tree \r\n\r\nExample: 12,18,8,11,17,5,4,7,2\r\n\r\nThe above tree is not AVL because differences between heights of left and right subtrees for 8 and 12 is greater than 1.\r\nWhy AVL Trees? \r\nMost of the BST operations (e.g., search, max, min, insert, delete.. etc) take O(h) time where h is the height of the BST. The cost of these operations may become O(n) for a skewed Binary tree. If we make sure that height of the tree remains O(Logn) after every insertion and deletion, then we can guarantee an upper bound of O(Logn) for all these operations. The height of an AVL tree is always O(Logn) where n is the number of nodes in the tree.\r\n`,\r\n    cpp: `// C++ program to insert a node in AVL tree\r\n#include<bits/stdc++.h>\r\nusing namespace std;\r\n\r\n// An AVL tree node\r\nclass Node\r\n{\r\n\tpublic:\r\n\tint key;\r\n\tNode *left;\r\n\tNode *right;\r\n\tint height;\r\n};\r\n\r\n// A utility function to get maximum\r\n// of two integers\r\nint max(int a, int b);\r\n\r\n// A utility function to get the\r\n// height of the tree\r\nint height(Node *N)\r\n{\r\n\tif (N == NULL)\r\n\t\treturn 0;\r\n\treturn N->height;\r\n}\r\n\r\n// A utility function to get maximum\r\n// of two integers\r\nint max(int a, int b)\r\n{\r\n\treturn (a > b)? a : b;\r\n}\r\n\r\n/* Helper function that allocates a\r\nnew node with the given key and\r\nNULL left and right pointers. */\r\nNode* newNode(int key)\r\n{\r\n\tNode* node = new Node();\r\n\tnode->key = key;\r\n\tnode->left = NULL;\r\n\tnode->right = NULL;\r\n\tnode->height = 1; // new node is initially\r\n\t\t\t\t\t// added at leaf\r\n\treturn(node);\r\n}\r\n\r\n// A utility function to right\r\n// rotate subtree rooted with y\r\n// See the diagram given above.\r\nNode *rightRotate(Node *y)\r\n{\r\n\tNode *x = y->left;\r\n\tNode *T2 = x->right;\r\n\r\n\t// Perform rotation\r\n\tx->right = y;\r\n\ty->left = T2;\r\n\r\n\t// Update heights\r\n\ty->height = max(height(y->left),\r\n\t\t\t\t\theight(y->right)) + 1;\r\n\tx->height = max(height(x->left),\r\n\t\t\t\t\theight(x->right)) + 1;\r\n\r\n\t// Return new root\r\n\treturn x;\r\n}\r\n\r\n// A utility function to left\r\n// rotate subtree rooted with x\r\n// See the diagram given above.\r\nNode *leftRotate(Node *x)\r\n{\r\n\tNode *y = x->right;\r\n\tNode *T2 = y->left;\r\n\r\n\t// Perform rotation\r\n\ty->left = x;\r\n\tx->right = T2;\r\n\r\n\t// Update heights\r\n\tx->height = max(height(x->left),\r\n\t\t\t\t\theight(x->right)) + 1;\r\n\ty->height = max(height(y->left),\r\n\t\t\t\t\theight(y->right)) + 1;\r\n\r\n\t// Return new root\r\n\treturn y;\r\n}\r\n\r\n// Get Balance factor of node N\r\nint getBalance(Node *N)\r\n{\r\n\tif (N == NULL)\r\n\t\treturn 0;\r\n\treturn height(N->left) - height(N->right);\r\n}\r\n\r\n// Recursive function to insert a key\r\n// in the subtree rooted with node and\r\n// returns the new root of the subtree.\r\nNode* insert(Node* node, int key)\r\n{\r\n\t/* 1. Perform the normal BST insertion */\r\n\tif (node == NULL)\r\n\t\treturn(newNode(key));\r\n\r\n\tif (key < node->key)\r\n\t\tnode->left = insert(node->left, key);\r\n\telse if (key > node->key)\r\n\t\tnode->right = insert(node->right, key);\r\n\telse // Equal keys are not allowed in BST\r\n\t\treturn node;\r\n\r\n\t/* 2. Update height of this ancestor node */\r\n\tnode->height = 1 + max(height(node->left),\r\n\t\t\t\t\t\theight(node->right));\r\n\r\n\t/* 3. Get the balance factor of this ancestor\r\n\t\tnode to check whether this node became\r\n\t\tunbalanced */\r\n\tint balance = getBalance(node);\r\n\r\n\t// If this node becomes unbalanced, then\r\n\t// there are 4 cases\r\n\r\n\t// Left Left Case\r\n\tif (balance > 1 && key < node->left->key)\r\n\t\treturn rightRotate(node);\r\n\r\n\t// Right Right Case\r\n\tif (balance < -1 && key > node->right->key)\r\n\t\treturn leftRotate(node);\r\n\r\n\t// Left Right Case\r\n\tif (balance > 1 && key > node->left->key)\r\n\t{\r\n\t\tnode->left = leftRotate(node->left);\r\n\t\treturn rightRotate(node);\r\n\t}\r\n\r\n\t// Right Left Case\r\n\tif (balance < -1 && key < node->right->key)\r\n\t{\r\n\t\tnode->right = rightRotate(node->right);\r\n\t\treturn leftRotate(node);\r\n\t}\r\n\r\n\t/* return the (unchanged) node pointer */\r\n\treturn node;\r\n}\r\n\r\n// A utility function to print preorder\r\n// traversal of the tree.\r\n// The function also prints height\r\n// of every node\r\nvoid preOrder(Node *root)\r\n{\r\n\tif(root != NULL)\r\n\t{\r\n\t\tcout << root->key << \" \";\r\n\t\tpreOrder(root->left);\r\n\t\tpreOrder(root->right);\r\n\t}\r\n}\r\n\r\n// Driver Code\r\nint main()\r\n{\r\n\tNode *root = NULL;\r\n\t\r\n\t/* Constructing tree given in\r\n\tthe above figure */\r\n\troot = insert(root, 10);\r\n\troot = insert(root, 20);\r\n\troot = insert(root, 30);\r\n\troot = insert(root, 40);\r\n\troot = insert(root, 50);\r\n\troot = insert(root, 25);\r\n\t\r\n\t/* The constructed AVL Tree would be\r\n\t\t\t\t30\r\n\t\t\t/ \\\r\n\t\t\t20 40\r\n\t\t\t/ \\ \\\r\n\t\t10 25 50\r\n\t*/\r\n\tcout << \"Preorder traversal of the \"\r\n\t\t\t\"constructed AVL tree is \\n\";\r\n\tpreOrder(root);\r\n\t\r\n\treturn 0;\r\n}\r\n`,\r\n    java: `// Java program for insertion in AVL Tree\r\nclass Node {\r\n\tint key, height;\r\n\tNode left, right;\r\n\r\n\tNode(int d) {\r\n\t\tkey = d;\r\n\t\theight = 1;\r\n\t}\r\n}\r\n\r\nclass AVLTree {\r\n\r\n\tNode root;\r\n\r\n\t// A utility function to get the height of the tree\r\n\tint height(Node N) {\r\n\t\tif (N == null)\r\n\t\t\treturn 0;\r\n\r\n\t\treturn N.height;\r\n\t}\r\n\r\n\t// A utility function to get maximum of two integers\r\n\tint max(int a, int b) {\r\n\t\treturn (a > b) ? a : b;\r\n\t}\r\n\r\n\t// A utility function to right rotate subtree rooted with y\r\n\t// See the diagram given above.\r\n\tNode rightRotate(Node y) {\r\n\t\tNode x = y.left;\r\n\t\tNode T2 = x.right;\r\n\r\n\t\t// Perform rotation\r\n\t\tx.right = y;\r\n\t\ty.left = T2;\r\n\r\n\t\t// Update heights\r\n\t\ty.height = max(height(y.left), height(y.right)) + 1;\r\n\t\tx.height = max(height(x.left), height(x.right)) + 1;\r\n\r\n\t\t// Return new root\r\n\t\treturn x;\r\n\t}\r\n\r\n\t// A utility function to left rotate subtree rooted with x\r\n\t// See the diagram given above.\r\n\tNode leftRotate(Node x) {\r\n\t\tNode y = x.right;\r\n\t\tNode T2 = y.left;\r\n\r\n\t\t// Perform rotation\r\n\t\ty.left = x;\r\n\t\tx.right = T2;\r\n\r\n\t\t// Update heights\r\n\t\tx.height = max(height(x.left), height(x.right)) + 1;\r\n\t\ty.height = max(height(y.left), height(y.right)) + 1;\r\n\r\n\t\t// Return new root\r\n\t\treturn y;\r\n\t}\r\n\r\n\t// Get Balance factor of node N\r\n\tint getBalance(Node N) {\r\n\t\tif (N == null)\r\n\t\t\treturn 0;\r\n\r\n\t\treturn height(N.left) - height(N.right);\r\n\t}\r\n\r\n\tNode insert(Node node, int key) {\r\n\r\n\t\t/* 1. Perform the normal BST insertion */\r\n\t\tif (node == null)\r\n\t\t\treturn (new Node(key));\r\n\r\n\t\tif (key < node.key)\r\n\t\t\tnode.left = insert(node.left, key);\r\n\t\telse if (key > node.key)\r\n\t\t\tnode.right = insert(node.right, key);\r\n\t\telse // Duplicate keys not allowed\r\n\t\t\treturn node;\r\n\r\n\t\t/* 2. Update height of this ancestor node */\r\n\t\tnode.height = 1 + max(height(node.left),\r\n\t\t\t\t\t\t\theight(node.right));\r\n\r\n\t\t/* 3. Get the balance factor of this ancestor\r\n\t\t\tnode to check whether this node became\r\n\t\t\tunbalanced */\r\n\t\tint balance = getBalance(node);\r\n\r\n\t\t// If this node becomes unbalanced, then there\r\n\t\t// are 4 cases Left Left Case\r\n\t\tif (balance > 1 && key < node.left.key)\r\n\t\t\treturn rightRotate(node);\r\n\r\n\t\t// Right Right Case\r\n\t\tif (balance < -1 && key > node.right.key)\r\n\t\t\treturn leftRotate(node);\r\n\r\n\t\t// Left Right Case\r\n\t\tif (balance > 1 && key > node.left.key) {\r\n\t\t\tnode.left = leftRotate(node.left);\r\n\t\t\treturn rightRotate(node);\r\n\t\t}\r\n\r\n\t\t// Right Left Case\r\n\t\tif (balance < -1 && key < node.right.key) {\r\n\t\t\tnode.right = rightRotate(node.right);\r\n\t\t\treturn leftRotate(node);\r\n\t\t}\r\n\r\n\t\t/* return the (unchanged) node pointer */\r\n\t\treturn node;\r\n\t}\r\n\r\n\t// A utility function to print preorder traversal\r\n\t// of the tree.\r\n\t// The function also prints height of every node\r\n\tvoid preOrder(Node node) {\r\n\t\tif (node != null) {\r\n\t\t\tSystem.out.print(node.key + \" \");\r\n\t\t\tpreOrder(node.left);\r\n\t\t\tpreOrder(node.right);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tAVLTree tree = new AVLTree();\r\n\r\n\t\t/* Constructing tree given in the above figure */\r\n\t\ttree.root = tree.insert(tree.root, 10);\r\n\t\ttree.root = tree.insert(tree.root, 20);\r\n\t\ttree.root = tree.insert(tree.root, 30);\r\n\t\ttree.root = tree.insert(tree.root, 40);\r\n\t\ttree.root = tree.insert(tree.root, 50);\r\n\t\ttree.root = tree.insert(tree.root, 25);\r\n\r\n\t\t/* The constructed AVL Tree would be\r\n\t\t\t30\r\n\t\t\t/ \\\r\n\t\t20 40\r\n\t\t/ \\\t \\\r\n\t\t10 25 50\r\n\t\t*/\r\n\t\tSystem.out.println(\"Preorder traversal\" +\r\n\t\t\t\t\t\t\" of constructed tree is : \");\r\n\t\ttree.preOrder(tree.root);\r\n\t}\r\n}\r\n`,\r\n    python: `# Python code to insert a node in AVL tree\r\n\r\n# Generic tree node class\r\nclass TreeNode(object):\r\n\tdef __init__(self, val):\r\n\t\tself.val = val\r\n\t\tself.left = None\r\n\t\tself.right = None\r\n\t\tself.height = 1\r\n\r\n# AVL tree class which supports the\r\n# Insert operation\r\nclass AVL_Tree(object):\r\n\r\n\t# Recursive function to insert key in\r\n\t# subtree rooted with node and returns\r\n\t# new root of subtree.\r\n\tdef insert(self, root, key):\r\n\t\r\n\t\t# Step 1 - Perform normal BST\r\n\t\tif not root:\r\n\t\t\treturn TreeNode(key)\r\n\t\telif key < root.val:\r\n\t\t\troot.left = self.insert(root.left, key)\r\n\t\telse:\r\n\t\t\troot.right = self.insert(root.right, key)\r\n\r\n\t\t# Step 2 - Update the height of the\r\n\t\t# ancestor node\r\n\t\troot.height = 1 + max(self.getHeight(root.left),\r\n\t\t\t\t\t\tself.getHeight(root.right))\r\n\r\n\t\t# Step 3 - Get the balance factor\r\n\t\tbalance = self.getBalance(root)\r\n\r\n\t\t# Step 4 - If the node is unbalanced,\r\n\t\t# then try out the 4 cases\r\n\t\t# Case 1 - Left Left\r\n\t\tif balance > 1 and key < root.left.val:\r\n\t\t\treturn self.rightRotate(root)\r\n\r\n\t\t# Case 2 - Right Right\r\n\t\tif balance < -1 and key > root.right.val:\r\n\t\t\treturn self.leftRotate(root)\r\n\r\n\t\t# Case 3 - Left Right\r\n\t\tif balance > 1 and key > root.left.val:\r\n\t\t\troot.left = self.leftRotate(root.left)\r\n\t\t\treturn self.rightRotate(root)\r\n\r\n\t\t# Case 4 - Right Left\r\n\t\tif balance < -1 and key < root.right.val:\r\n\t\t\troot.right = self.rightRotate(root.right)\r\n\t\t\treturn self.leftRotate(root)\r\n\r\n\t\treturn root\r\n\r\n\tdef leftRotate(self, z):\r\n\r\n\t\ty = z.right\r\n\t\tT2 = y.left\r\n\r\n\t\t# Perform rotation\r\n\t\ty.left = z\r\n\t\tz.right = T2\r\n\r\n\t\t# Update heights\r\n\t\tz.height = 1 + max(self.getHeight(z.left),\r\n\t\t\t\t\t\tself.getHeight(z.right))\r\n\t\ty.height = 1 + max(self.getHeight(y.left),\r\n\t\t\t\t\t\tself.getHeight(y.right))\r\n\r\n\t\t# Return the new root\r\n\t\treturn y\r\n\r\n\tdef rightRotate(self, z):\r\n\r\n\t\ty = z.left\r\n\t\tT3 = y.right\r\n\r\n\t\t# Perform rotation\r\n\t\ty.right = z\r\n\t\tz.left = T3\r\n\r\n\t\t# Update heights\r\n\t\tz.height = 1 + max(self.getHeight(z.left),\r\n\t\t\t\t\t\tself.getHeight(z.right))\r\n\t\ty.height = 1 + max(self.getHeight(y.left),\r\n\t\t\t\t\t\tself.getHeight(y.right))\r\n\r\n\t\t# Return the new root\r\n\t\treturn y\r\n\r\n\tdef getHeight(self, root):\r\n\t\tif not root:\r\n\t\t\treturn 0\r\n\r\n\t\treturn root.height\r\n\r\n\tdef getBalance(self, root):\r\n\t\tif not root:\r\n\t\t\treturn 0\r\n\r\n\t\treturn self.getHeight(root.left) - self.getHeight(root.right)\r\n\r\n\tdef preOrder(self, root):\r\n\r\n\t\tif not root:\r\n\t\t\treturn\r\n\r\n\t\tprint(\"{0} \".format(root.val), end=\"\")\r\n\t\tself.preOrder(root.left)\r\n\t\tself.preOrder(root.right)\r\n\r\n\r\n# Driver program to test above function\r\nmyTree = AVL_Tree()\r\nroot = None\r\n\r\nroot = myTree.insert(root, 10)\r\nroot = myTree.insert(root, 20)\r\nroot = myTree.insert(root, 30)\r\nroot = myTree.insert(root, 40)\r\nroot = myTree.insert(root, 50)\r\nroot = myTree.insert(root, 25)\r\n\r\n\"\"\"The constructed AVL Tree would be\r\n\t\t\t30\r\n\t\t/ \\\r\n\t\t20 40\r\n\t\t/ \\\t \\\r\n\t10 25 50\"\"\"\r\n\r\n# Preorder Traversal\r\nprint(\"Preorder traversal of the\",\r\n\t\"constructed AVL tree is\")\r\nmyTree.preOrder(root)\r\nprint()\r\n`,\r\n  },\r\n  //   Dijkstra’s Algorithm\r\n  pf: {\r\n    name: `Dijkstra’s Algorithm `,\r\n    intro: ``,\r\n    cpp: `// A C++ program for Dijkstra's single source shortest path algorithm.\r\n// The program is for adjacency matrix representation of the graph\r\n\r\n#include <limits.h>\r\n#include <stdio.h>\r\n\r\n// Number of vertices in the graph\r\n#define V 9\r\n\r\n// A utility function to find the vertex with minimum distance value, from\r\n// the set of vertices not yet included in shortest path tree\r\nint minDistance(int dist[], bool sptSet[])\r\n{\r\n\t// Initialize min value\r\n\tint min = INT_MAX, min_index;\r\n\r\n\tfor (int v = 0; v < V; v++)\r\n\t\tif (sptSet[v] == false && dist[v] <= min)\r\n\t\t\tmin = dist[v], min_index = v;\r\n\r\n\treturn min_index;\r\n}\r\n\r\n// A utility function to print the constructed distance array\r\nvoid printSolution(int dist[])\r\n{\r\n\tprintf(\"Vertex \\t\\t Distance from Source\\n\");\r\n\tfor (int i = 0; i < V; i++)\r\n\t\tprintf(\"%d \\t\\t %d\\n\", i, dist[i]);\r\n}\r\n\r\n// Function that implements Dijkstra's single source shortest path algorithm\r\n// for a graph represented using adjacency matrix representation\r\nvoid dijkstra(int graph[V][V], int src)\r\n{\r\n\tint dist[V]; // The output array. dist[i] will hold the shortest\r\n\t// distance from src to i\r\n\r\n\tbool sptSet[V]; // sptSet[i] will be true if vertex i is included in shortest\r\n\t// path tree or shortest distance from src to i is finalized\r\n\r\n\t// Initialize all distances as INFINITE and stpSet[] as false\r\n\tfor (int i = 0; i < V; i++)\r\n\t\tdist[i] = INT_MAX, sptSet[i] = false;\r\n\r\n\t// Distance of source vertex from itself is always 0\r\n\tdist[src] = 0;\r\n\r\n\t// Find shortest path for all vertices\r\n\tfor (int count = 0; count < V - 1; count++) {\r\n\t\t// Pick the minimum distance vertex from the set of vertices not\r\n\t\t// yet processed. u is always equal to src in the first iteration.\r\n\t\tint u = minDistance(dist, sptSet);\r\n\r\n\t\t// Mark the picked vertex as processed\r\n\t\tsptSet[u] = true;\r\n\r\n\t\t// Update dist value of the adjacent vertices of the picked vertex.\r\n\t\tfor (int v = 0; v < V; v++)\r\n\r\n\t\t\t// Update dist[v] only if is not in sptSet, there is an edge from\r\n\t\t\t// u to v, and total weight of path from src to v through u is\r\n\t\t\t// smaller than current value of dist[v]\r\n\t\t\tif (!sptSet[v] && graph[u][v] && dist[u] != INT_MAX\r\n\t\t\t\t&& dist[u] + graph[u][v] < dist[v])\r\n\t\t\t\tdist[v] = dist[u] + graph[u][v];\r\n\t}\r\n\r\n\t// print the constructed distance array\r\n\tprintSolution(dist);\r\n}\r\n\r\n// driver program to test above function\r\nint main()\r\n{\r\n\t/* Let us create the example graph discussed above */\r\n\tint graph[V][V] = { { 0, 4, 0, 0, 0, 0, 0, 8, 0 },\r\n\t\t\t\t\t\t{ 4, 0, 8, 0, 0, 0, 0, 11, 0 },\r\n\t\t\t\t\t\t{ 0, 8, 0, 7, 0, 4, 0, 0, 2 },\r\n\t\t\t\t\t\t{ 0, 0, 7, 0, 9, 14, 0, 0, 0 },\r\n\t\t\t\t\t\t{ 0, 0, 0, 9, 0, 10, 0, 0, 0 },\r\n\t\t\t\t\t\t{ 0, 0, 4, 14, 10, 0, 2, 0, 0 },\r\n\t\t\t\t\t\t{ 0, 0, 0, 0, 0, 2, 0, 1, 6 },\r\n\t\t\t\t\t\t{ 8, 11, 0, 0, 0, 0, 1, 0, 7 },\r\n\t\t\t\t\t\t{ 0, 0, 2, 0, 0, 0, 6, 7, 0 } };\r\n\r\n\tdijkstra(graph, 0);\r\n\r\n\treturn 0;\r\n}\r\n`,\r\n    java: `// A Java program for Dijkstra's single source shortest path algorithm.\r\n// The program is for adjacency matrix representation of the graph\r\nimport java.util.*;\r\nimport java.lang.*;\r\nimport java.io.*;\r\n\r\nclass ShortestPath {\r\n\t// A utility function to find the vertex with minimum distance value,\r\n\t// from the set of vertices not yet included in shortest path tree\r\n\tstatic final int V = 9;\r\n\tint minDistance(int dist[], Boolean sptSet[])\r\n\t{\r\n\t\t// Initialize min value\r\n\t\tint min = Integer.MAX_VALUE, min_index = -1;\r\n\r\n\t\tfor (int v = 0; v < V; v++)\r\n\t\t\tif (sptSet[v] == false && dist[v] <= min) {\r\n\t\t\t\tmin = dist[v];\r\n\t\t\t\tmin_index = v;\r\n\t\t\t}\r\n\r\n\t\treturn min_index;\r\n\t}\r\n\r\n\t// A utility function to print the constructed distance array\r\n\tvoid printSolution(int dist[])\r\n\t{\r\n\t\tSystem.out.println(\"Vertex \\t\\t Distance from Source\");\r\n\t\tfor (int i = 0; i < V; i++)\r\n\t\t\tSystem.out.println(i + \" \\t\\t \" + dist[i]);\r\n\t}\r\n\r\n\t// Function that implements Dijkstra's single source shortest path\r\n\t// algorithm for a graph represented using adjacency matrix\r\n\t// representation\r\n\tvoid dijkstra(int graph[][], int src)\r\n\t{\r\n\t\tint dist[] = new int[V]; // The output array. dist[i] will hold\r\n\t\t// the shortest distance from src to i\r\n\r\n\t\t// sptSet[i] will true if vertex i is included in shortest\r\n\t\t// path tree or shortest distance from src to i is finalized\r\n\t\tBoolean sptSet[] = new Boolean[V];\r\n\r\n\t\t// Initialize all distances as INFINITE and stpSet[] as false\r\n\t\tfor (int i = 0; i < V; i++) {\r\n\t\t\tdist[i] = Integer.MAX_VALUE;\r\n\t\t\tsptSet[i] = false;\r\n\t\t}\r\n\r\n\t\t// Distance of source vertex from itself is always 0\r\n\t\tdist[src] = 0;\r\n\r\n\t\t// Find shortest path for all vertices\r\n\t\tfor (int count = 0; count < V - 1; count++) {\r\n\t\t\t// Pick the minimum distance vertex from the set of vertices\r\n\t\t\t// not yet processed. u is always equal to src in first\r\n\t\t\t// iteration.\r\n\t\t\tint u = minDistance(dist, sptSet);\r\n\r\n\t\t\t// Mark the picked vertex as processed\r\n\t\t\tsptSet[u] = true;\r\n\r\n\t\t\t// Update dist value of the adjacent vertices of the\r\n\t\t\t// picked vertex.\r\n\t\t\tfor (int v = 0; v < V; v++)\r\n\r\n\t\t\t\t// Update dist[v] only if is not in sptSet, there is an\r\n\t\t\t\t// edge from u to v, and total weight of path from src to\r\n\t\t\t\t// v through u is smaller than current value of dist[v]\r\n\t\t\t\tif (!sptSet[v] && graph[u][v] != 0 && dist[u] != Integer.MAX_VALUE && dist[u] + graph[u][v] < dist[v])\r\n\t\t\t\t\tdist[v] = dist[u] + graph[u][v];\r\n\t\t}\r\n\r\n\t\t// print the constructed distance array\r\n\t\tprintSolution(dist);\r\n\t}\r\n\r\n\t// Driver method\r\n\tpublic static void main(String[] args)\r\n\t{\r\n\t\t/* Let us create the example graph discussed above */\r\n\t\tint graph[][] = new int[][] { { 0, 4, 0, 0, 0, 0, 0, 8, 0 },\r\n\t\t\t\t\t\t\t\t\t{ 4, 0, 8, 0, 0, 0, 0, 11, 0 },\r\n\t\t\t\t\t\t\t\t\t{ 0, 8, 0, 7, 0, 4, 0, 0, 2 },\r\n\t\t\t\t\t\t\t\t\t{ 0, 0, 7, 0, 9, 14, 0, 0, 0 },\r\n\t\t\t\t\t\t\t\t\t{ 0, 0, 0, 9, 0, 10, 0, 0, 0 },\r\n\t\t\t\t\t\t\t\t\t{ 0, 0, 4, 14, 10, 0, 2, 0, 0 },\r\n\t\t\t\t\t\t\t\t\t{ 0, 0, 0, 0, 0, 2, 0, 1, 6 },\r\n\t\t\t\t\t\t\t\t\t{ 8, 11, 0, 0, 0, 0, 1, 0, 7 },\r\n\t\t\t\t\t\t\t\t\t{ 0, 0, 2, 0, 0, 0, 6, 7, 0 } };\r\n\t\tShortestPath t = new ShortestPath();\r\n\t\tt.dijkstra(graph, 0);\r\n\t}\r\n}\r\n`,\r\n    python: `# Python program for Dijkstra's single\r\n# source shortest path algorithm. The program is\r\n# for adjacency matrix representation of the graph\r\n\r\n# Library for INT_MAX\r\nimport sys\r\n\r\nclass Graph():\r\n\r\n\tdef __init__(self, vertices):\r\n\t\tself.V = vertices\r\n\t\tself.graph = [[0 for column in range(vertices)]\r\n\t\t\t\t\tfor row in range(vertices)]\r\n\r\n\tdef printSolution(self, dist):\r\n\t\tprint \"Vertex \\tDistance from Source\"\r\n\t\tfor node in range(self.V):\r\n\t\t\tprint node, \"\\t\", dist[node]\r\n\r\n\t# A utility function to find the vertex with\r\n\t# minimum distance value, from the set of vertices\r\n\t# not yet included in shortest path tree\r\n\tdef minDistance(self, dist, sptSet):\r\n\r\n\t\t# Initilaize minimum distance for next node\r\n\t\tmin = sys.maxint\r\n\r\n\t\t# Search not nearest vertex not in the\r\n\t\t# shortest path tree\r\n\t\tfor v in range(self.V):\r\n\t\t\tif dist[v] < min and sptSet[v] == False:\r\n\t\t\t\tmin = dist[v]\r\n\t\t\t\tmin_index = v\r\n\r\n\t\treturn min_index\r\n\r\n\t# Funtion that implements Dijkstra's single source\r\n\t# shortest path algorithm for a graph represented\r\n\t# using adjacency matrix representation\r\n\tdef dijkstra(self, src):\r\n\r\n\t\tdist = [sys.maxint] * self.V\r\n\t\tdist[src] = 0\r\n\t\tsptSet = [False] * self.V\r\n\r\n\t\tfor cout in range(self.V):\r\n\r\n\t\t\t# Pick the minimum distance vertex from\r\n\t\t\t# the set of vertices not yet processed.\r\n\t\t\t# u is always equal to src in first iteration\r\n\t\t\tu = self.minDistance(dist, sptSet)\r\n\r\n\t\t\t# Put the minimum distance vertex in the\r\n\t\t\t# shotest path tree\r\n\t\t\tsptSet[u] = True\r\n\r\n\t\t\t# Update dist value of the adjacent vertices\r\n\t\t\t# of the picked vertex only if the current\r\n\t\t\t# distance is greater than new distance and\r\n\t\t\t# the vertex in not in the shotest path tree\r\n\t\t\tfor v in range(self.V):\r\n\t\t\t\tif self.graph[u][v] > 0 and sptSet[v] == False and \\\r\n\t\t\t\tdist[v] > dist[u] + self.graph[u][v]:\r\n\t\t\t\t\t\tdist[v] = dist[u] + self.graph[u][v]\r\n\r\n\t\tself.printSolution(dist)\r\n\r\n# Driver program\r\ng = Graph(9)\r\ng.graph = [[0, 4, 0, 0, 0, 0, 0, 8, 0],\r\n\t\t[4, 0, 8, 0, 0, 0, 0, 11, 0],\r\n\t\t[0, 8, 0, 7, 0, 4, 0, 0, 2],\r\n\t\t[0, 0, 7, 0, 9, 14, 0, 0, 0],\r\n\t\t[0, 0, 0, 9, 0, 10, 0, 0, 0],\r\n\t\t[0, 0, 4, 14, 10, 0, 2, 0, 0],\r\n\t\t[0, 0, 0, 0, 0, 2, 0, 1, 6],\r\n\t\t[8, 11, 0, 0, 0, 0, 1, 0, 7],\r\n\t\t[0, 0, 2, 0, 0, 0, 6, 7, 0]\r\n\t\t];\r\n\r\ng.dijkstra(0);\r\n`,\r\n  },\r\n};\r\n\r\nexport default codeData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport Information from \"../../../material-ui-components/information\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./styles.css\";\r\nimport codeData from \"./../../../data\";\r\nconst BinarySearch = () => {\r\n  const [cellArray, setCellArray] = useState([]);\r\n  const [TargetSelected, setTargetSelected] = useState(\"\");\r\n  const [isFound, setIsFound] = useState(false);\r\n  const [stack, setStack] = useState();\r\n  const [displayStack, setDisplayStack] = useState([]);\r\n  const [executionStack, setExecutionStack] = useState([]);\r\n\r\n  // console.log(displayStack);\r\n\r\n  const valueArray = [];\r\n\r\n  // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  const start = () => {\r\n    setTargetSelected(\"\");\r\n    setStack();\r\n    setIsFound(false);\r\n    setExecutionStack([]);\r\n    for (let i = 1; i < 16; i++) valueArray.push(i * i);\r\n    let mid = Math.floor((valueArray.length - 1) / 2);\r\n    setDisplayStack([{ low: 0, mid: mid, high: valueArray.length - 1 }]);\r\n    const array = valueArray.map((item) => {\r\n      return {\r\n        id: Math.random().toString(),\r\n        value: item,\r\n        type: {\r\n          low: valueArray.indexOf(item) === 0 ? true : false,\r\n          mid: valueArray.indexOf(item) === mid ? true : false,\r\n          high:\r\n            valueArray.indexOf(item) === valueArray.length - 1 ? true : false,\r\n          target: false,\r\n          active: true,\r\n        },\r\n      };\r\n    });\r\n    setCellArray(array);\r\n  };\r\n\r\n  useEffect(() => {\r\n    start();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  const handleSetTarget = (id) => {\r\n    if (!TargetSelected) {\r\n      let element = cellArray.filter((i) => i.id === id);\r\n      element = element[0];\r\n      console.log(element);\r\n      let index = cellArray.indexOf(element);\r\n      // console.log(index);\r\n      element.type.target = true;\r\n      let updatedCellArray = [...cellArray];\r\n      updatedCellArray[index] = element;\r\n      setTargetSelected(element.value);\r\n      setCellArray(updatedCellArray);\r\n      // console.log(id);\r\n    } else {\r\n      handleReset();\r\n      //   handleSetTarget(id);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    if (TargetSelected) {\r\n      let updatedCellArray = cellArray.map((i) => {\r\n        return {\r\n          ...i,\r\n          type: {\r\n            ...i.type,\r\n            target: false,\r\n          },\r\n        };\r\n      });\r\n      setCellArray(updatedCellArray);\r\n      setTargetSelected(\"\");\r\n    }\r\n  };\r\n\r\n  const handleCompute = () => {\r\n    const stack = [];\r\n    let low = 0;\r\n    let high = cellArray.length - 1;\r\n    let obj;\r\n\r\n    let mid = Math.floor((low + high) / 2);\r\n\r\n    // console.log(typeof cellArray[mid].value);\r\n    // console.log(typeof TargetSelected);\r\n    while (low <= high) {\r\n      mid = Math.floor((low + high) / 2);\r\n      if (cellArray[mid].value === TargetSelected) {\r\n        obj = {\r\n          low: low,\r\n          mid: Math.floor((low + high) / 2),\r\n          high: high,\r\n          target: TargetSelected,\r\n        };\r\n        stack.push(obj);\r\n        break;\r\n      } else if (TargetSelected < cellArray[mid].value) {\r\n        high = mid - 1;\r\n        obj = {\r\n          low: low,\r\n          mid: Math.floor((low + high) / 2),\r\n          high: high,\r\n          target: TargetSelected,\r\n        };\r\n        stack.push(obj);\r\n      } else if (TargetSelected > cellArray[mid].value) {\r\n        low = mid + 1;\r\n        obj = {\r\n          low: low,\r\n          mid: Math.floor((low + high) / 2),\r\n          high: high,\r\n          target: TargetSelected,\r\n        };\r\n        stack.push(obj);\r\n      }\r\n    }\r\n    // console.log(stack);\r\n    stack.pop();\r\n    setStack(stack);\r\n    setDisplayStack((prev) => [...prev, ...stack]);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    // console.log(stack);\r\n    let oldCellArray = [...cellArray];\r\n    oldCellArray.forEach((i) => {\r\n      i.type = { ...i.type, low: false, mid: false, high: false };\r\n    });\r\n    let update = stack.shift();\r\n    let element = displayStack.shift();\r\n    if (element) setExecutionStack((prev) => [...prev, element]);\r\n\r\n    if (!update) {\r\n      setStack();\r\n      setTargetSelected(\"\");\r\n      setIsFound(true);\r\n    }\r\n    if (update) {\r\n      for (let i = 0; i < oldCellArray.length; i++) {\r\n        if (i >= update.low && i <= update.high) {\r\n          oldCellArray[i].type.active = true;\r\n        } else {\r\n          oldCellArray[i].type.active = false;\r\n        }\r\n      }\r\n      oldCellArray[update.low].type.low = true;\r\n      oldCellArray[update.high].type.high = true;\r\n      oldCellArray[update.mid].type.mid = true;\r\n      setCellArray(oldCellArray);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"binary-container\">\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Welcome to Binary Search\"\r\n        content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n      />\r\n      <Information codeData={codeData.bs} />\r\n      <div className=\"row\">\r\n        <div className=\"col-12 text-center\">\r\n          {!TargetSelected && !isFound && (\r\n            <h3 className=\"display-4 mb-4\">Please Select Target </h3>\r\n          )}\r\n          {TargetSelected && (\r\n            <h3 className=\"display-4 mb-4\">looking for {TargetSelected}</h3>\r\n          )}\r\n          {isFound && (\r\n            <h3 className=\"display-4 mb-4\">\r\n              Found in {executionStack.length} steps!\r\n            </h3>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <ul>\r\n        {cellArray.map((i) => {\r\n          let style = \"marker step-marker \";\r\n          let cellStyle = \"cell \";\r\n          let value;\r\n\r\n          if (i.type.active === false) cellStyle += \"unactive\";\r\n          if (i.type.target === true) {\r\n            cellStyle += \"target \";\r\n            style = \"marker step-marker \";\r\n          }\r\n          if (i.type.low === true) cellStyle += \"low \";\r\n          if (i.type.mid === true) cellStyle += \"mid \";\r\n          if (i.type.high === true) cellStyle += \"high \";\r\n\r\n          if (i.type.target === true) value = \"Target \";\r\n\r\n          if (i.type.low === true) value = \"Low \";\r\n          if (i.type.mid === true) value = \"mid \";\r\n          if (i.type.high === true) value = \"High \";\r\n          return (\r\n            <>\r\n              {i.type.low || i.type.high || i.type.mid || i.type.target ? (\r\n                <p className={style}>{value}</p>\r\n              ) : (\r\n                <p className=\"dummy\"></p>\r\n              )}\r\n              <li\r\n                onClick={() => handleSetTarget(i.id)}\r\n                id={i}\r\n                className={cellStyle}\r\n              >\r\n                {i.value}\r\n              </li>\r\n            </>\r\n          );\r\n        })}\r\n      </ul>\r\n      {executionStack.length > 0 && (\r\n        <div className=\"wrapper\">\r\n          {executionStack.map((item) => {\r\n            return (\r\n              <ul className=\"stack-element\">\r\n                <li className=\"history__low \">{item.low}</li>\r\n                <li className=\"history__mid \">{item.mid}</li>\r\n                <li className=\"history__high \">{item.high}</li>\r\n              </ul>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      <div className=\"controlls-container w-100\">\r\n        {TargetSelected ? (\r\n          stack ? (\r\n            <Button onClick={handleNext} className=\"Button\" variant=\"outlined\">\r\n              Next\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              onClick={handleCompute}\r\n              className=\"Button\"\r\n              variant=\"outlined\"\r\n            >\r\n              Start\r\n            </Button>\r\n          )\r\n        ) : (\r\n          <Button\r\n            onClick={start}\r\n            className=\" controller-bs\"\r\n            className=\"Button\"\r\n            variant=\"outlined\"\r\n          >\r\n            Full Reset\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BinarySearch;\r\n","export const getWidth = (noBars) => {\r\n  let width;\r\n  if (parseInt(noBars) === 5) width = \"16%\";\r\n  if (parseInt(noBars) === 10) width = \"9%\";\r\n  if (parseInt(noBars) === 25) width = \"3.5%\";\r\n  if (parseInt(noBars) === 50) width = \"1.6%\";\r\n  if (parseInt(noBars) === 100) width = \"0.6%\";\r\n  return width;\r\n};\r\n\r\nexport const randonIntFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n","import { getWidth } from \"../helper\";\r\nimport \"./bar-style.css\";\r\n\r\nexport const Bar = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: `${props.height}px`,\r\n        width: getWidth(props.noBars),\r\n        backgroundColor: props.returnColor,\r\n      }}\r\n      key={props.key}\r\n      className=\"array-bar\"\r\n    >\r\n      {props.noBars < 50 && (\r\n        <div className=\"badge badge-warning text-dark \">{props.height}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import \"./colorIndicator-style.css\";\r\n\r\nexport const ColorIndicator = ({ indicator }) => {\r\n  return (\r\n    <ul className=\"color-info p-0\">\r\n      {indicator.map((i) => {\r\n        return (\r\n          <div>\r\n            <li className=\"box\" style={{ backgroundColor: i.color }}></li>\r\n            <li>{i.name}</li>\r\n          </div>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import Button from \"@material-ui/core/Button\";\r\n\r\nexport const Controller = ({\r\n  resetArray,\r\n  operation,\r\n  handleSpeedChange,\r\n  handleSizeChange,\r\n}) => {\r\n  return (\r\n    <div className=\"controller container justify-content-md-center d-flex w-100\">\r\n      <div className=\"col-sm-2 \">\r\n        <Button onClick={resetArray} className=\"Button\" variant=\"outlined\">\r\n          New Array\r\n        </Button>\r\n      </div>\r\n      <div className=\"col-sm-2\">\r\n        <Button\r\n          onClick={() => operation()}\r\n          className=\"Button\"\r\n          variant=\"outlined\"\r\n        >\r\n          Sort\r\n        </Button>\r\n      </div>\r\n      <div className=\"col-sm-3\">\r\n        <form className=\"d-flex  align-items-center \">\r\n          <div className=\"col-sm-3\">\r\n            <label className=\"p-0 m-0\" htmlFor=\"speed\">\r\n              Speed\r\n            </label>\r\n          </div>\r\n          <div className=\"col-sm-9\">\r\n            <select\r\n              onChange={handleSpeedChange}\r\n              id=\"speed\"\r\n              class=\"form-control\"\r\n            >\r\n              <option selected value=\"1\">\r\n                x1\r\n              </option>\r\n              <option value=\"2\">x2</option>\r\n              <option value=\"3\">x3</option>\r\n              <option value=\"4\">x4</option>\r\n              <option value=\"5\">x5</option>\r\n              <option value=\"10\">x10</option>\r\n              <option value=\"100\">x100</option>\r\n            </select>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"col-sm-3\">\r\n        <form className=\"d-flex  align-items-center \">\r\n          <div className=\"col-sm-3\">\r\n            <label className=\"p-0 m-0\" htmlFor=\"size\">\r\n              Size\r\n            </label>\r\n          </div>\r\n          <div className=\"col-sm-9\">\r\n            <select id=\"size\" onChange={handleSizeChange} class=\"form-control\">\r\n              <option value=\"5\">5</option>\r\n              <option value=\"10\">10</option>\r\n              <option selected value=\"25\">\r\n                25\r\n              </option>\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n            </select>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport \"./bubble-sort-style.css\";\r\nimport { Bar } from \"./../bar/bar\";\r\nimport { ColorIndicator } from \"./../colorIndicator/colorIndicator\";\r\nimport { Controller } from \"./../controller/controller.jsx\";\r\nimport { randonIntFromInterval } from \"../helper.jsx\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport Information from \"../../../material-ui-components/information\";\r\nimport codeData from \"./../../../data\";\r\n\r\nconst BubbleSort = forwardRef(({ size = 25, noController = false }, ref) => {\r\n  console.log(size);\r\n  const [array, setArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(1);\r\n  const [noBars, setNoBars] = useState(size);\r\n  let animations = [];\r\n\r\n  //   --------------------------------------------------------------------------------\r\n  //    COLORS HERE\r\n\r\n  const considerColor = \"#FAD02C\";\r\n  const returnColor = \"rgb(63,81,181)\"; // return and initial color are same\r\n  const compareColor = \"rgb(216, 10, 74)\";\r\n  const swapColor = \"#32CD30\";\r\n  const sortedColor = \"green\";\r\n\r\n  //    MARGIN VARIABLES\r\n  const normalMargin = \"2px\";\r\n  const compare_left_Margin = \"0px 5px 0px 12px\";\r\n  const compare_right_Margin = \"0px 12px 0px 5px\";\r\n\r\n  //   --------------------------------------------------------------------------------\r\n\r\n  const resetArray = () => {\r\n    let temp = [];\r\n    for (let i = 0; i < noBars; i++) temp.push(randonIntFromInterval(50, 400));\r\n    const arrayBar = Array.from(document.getElementsByClassName(\"array-bar\"));\r\n    arrayBar.forEach((i) => {\r\n      i.style.backgroundColor = returnColor;\r\n      i.style.color = \"black\";\r\n    });\r\n    setArray(temp);\r\n    // setLogs([]);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  // MAIN BUBBLE SORT LOGIC HERE\r\n  const compute = (array) => {\r\n    const animation = [];\r\n    let i, j;\r\n    for (i = 0; i < array.length - 1; i++) {\r\n      for (j = 0; j < array.length - 1 - i; j++) {\r\n        animation.push({ type: \"consider\", value: [j, j + 1] });\r\n        animation.push({ type: \"compare\", value: [j, j + 1] });\r\n        if (array[j] > array[j + 1]) {\r\n          animation.push({ type: \"swap\", value: [j, j + 1] });\r\n          let temp = array[j];\r\n          array[j] = array[j + 1];\r\n          array[j + 1] = temp;\r\n        }\r\n        animation.push({ type: \"return\", value: [j, j + 1] });\r\n      }\r\n      animation.push({ type: \"sorted\", value: [j, j] });\r\n    }\r\n    animation.push({ type: \"sorted\", value: [0, 0] });\r\n    return animation;\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    start() {\r\n      bubbleSort();\r\n    },\r\n  }));\r\n\r\n  const bubbleSort = () => {\r\n    animations = compute(array);\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    let speed = 1000 / animationSpeed;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const { type, value } = animations[i];\r\n      const [barIdxOne, barIdxTwo] = value;\r\n      const barOne = arrayBar[barIdxOne];\r\n      const barTwo = arrayBar[barIdxTwo];\r\n      const barOneStyle = arrayBar[barIdxOne].style;\r\n      const barTwoStyle = arrayBar[barIdxTwo].style;\r\n      if (type === \"consider\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = considerColor;\r\n          barTwoStyle.backgroundColor = considerColor;\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n        }, i * speed);\r\n      } else if (type === \"return\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.backgroundColor = returnColor;\r\n          barTwoStyle.backgroundColor = returnColor;\r\n        }, i * speed);\r\n      } else if (type === \"compare\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = compare_left_Margin;\r\n          barTwoStyle.margin = compare_right_Margin;\r\n          barOneStyle.backgroundColor = compareColor;\r\n          barTwoStyle.backgroundColor = compareColor;\r\n        }, i * speed);\r\n      } else if (type === \"swap\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = swapColor;\r\n          barTwoStyle.backgroundColor = swapColor;\r\n          let temp = barOneStyle.height;\r\n\r\n          let temp2 = barOne.textContent;\r\n          barOne.textContent = barTwo.textContent;\r\n          barTwo.textContent = temp2;\r\n\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.height = barTwoStyle.height;\r\n          barTwoStyle.height = temp;\r\n        }, i * speed);\r\n      } else if (type === \"sorted\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = sortedColor;\r\n          barTwoStyle.backgroundColor = sortedColor;\r\n          barOneStyle.color = \"white\";\r\n          barTwoStyle.color = \"white\";\r\n        }, i * speed);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSpeedChange = (e) => {\r\n    setAnimationSpeed(e.target.value);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    setArray([]);\r\n    setNoBars(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!noController && (\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Bubble Sort\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n      )}\r\n      {!noController && <Information codeData={codeData.bso} />}\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"consider\", color: considerColor },\r\n          { name: \"compare\", color: compareColor },\r\n          { name: \"swap\", color: swapColor },\r\n          { name: \"sorted\", color: sortedColor },\r\n          { name: \"initial\", color: returnColor },\r\n        ]}\r\n      />\r\n      <hr />\r\n      <div className=\"Container \">\r\n        {array.map((i, idx) => {\r\n          return (\r\n            <Bar\r\n              height={i}\r\n              noBars={noBars}\r\n              returnColor={returnColor}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <hr />\r\n      {!noController && (\r\n        <div className=\"controlls-container w-100\">\r\n          <Controller\r\n            resetArray={resetArray}\r\n            operation={bubbleSort}\r\n            handleSpeedChange={handleSpeedChange}\r\n            handleSizeChange={handleSizeChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default BubbleSort;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport Information from \"../../../material-ui-components/information\";\r\nimport { Bar } from \"../bar/bar\";\r\nimport { ColorIndicator } from \"../colorIndicator/colorIndicator\";\r\nimport { Controller } from \"../controller/controller\";\r\nimport \"./insertion-sort-style.css\";\r\nimport codeData from \"./../../../data\";\r\n\r\nconst randonIntFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst InsertionSort = forwardRef(({ size = 25, noController = false }, ref) => {\r\n  const [array, setArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(1);\r\n  const [noBars, setNoBars] = useState(size);\r\n\r\n  //   --------------------------------------------------------------------------------\r\n  //    COLORS HERE\r\n\r\n  const keySelectionColor = \"#FAD02C\";\r\n  const returnColor = \"rgb(63,81,181)\"; // return and initial color are same\r\n  const compareColor = \"rgb(216, 10, 74)\";\r\n  const memoryOverridingColor = \"#32CD30\";\r\n\r\n  //    MARGIN VARIABLES\r\n  const normalMargin = \"2px\";\r\n  const compare_left_Margin = \"0px 5px 0px 8px\";\r\n  const compare_right_Margin = \"0px 8px 0px 5px\";\r\n\r\n  //   --------------------------------------------------------------------------------\r\n\r\n  const resetArray = () => {\r\n    let temp = [];\r\n    for (let i = 0; i < noBars; i++) temp.push(randonIntFromInterval(50, 400));\r\n    const arrayBar = Array.from(document.getElementsByClassName(\"array-bar\"));\r\n    arrayBar.forEach((i) => {\r\n      i.style.backgroundColor = returnColor;\r\n      i.style.color = \"black\";\r\n    });\r\n    setArray(temp);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    start() {\r\n      insertionSort();\r\n    },\r\n  }));\r\n\r\n  const compute = (array) => {\r\n    const animation = [];\r\n    let i, j;\r\n    for (i = 1; i < array.length; i++) {\r\n      let key = array[i];\r\n      animation.push({ type: \"key_selection\", value: [i, i] });\r\n      j = i - 1;\r\n      animation.push({ type: \"comparing\", value: [j, i] });\r\n\r\n      while (j > -1 && array[j] > key) {\r\n        animation.push({ type: \"comparing\", value: [j + 1, j] });\r\n        array[j + 1] = array[j];\r\n        animation.push({ type: \"memory_overriding\", value: [j + 1, j] });\r\n        animation.push({ type: \"return\", value: [j + 1, j] });\r\n        j--;\r\n      }\r\n      array[j + 1] = key;\r\n    }\r\n    return animation;\r\n  };\r\n\r\n  const insertionSort = () => {\r\n    const animations = compute(array);\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    let speed = 1000 / animationSpeed;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const { type, value } = animations[i];\r\n      const [barIdxOne, barIdxTwo] = value;\r\n      const barOne = arrayBar[barIdxOne];\r\n      const barTwo = arrayBar[barIdxTwo];\r\n\r\n      const barOneStyle = arrayBar[barIdxOne].style;\r\n      const barTwoStyle = arrayBar[barIdxTwo].style;\r\n      if (type === \"key_selection\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = keySelectionColor;\r\n          barTwoStyle.backgroundColor = keySelectionColor;\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n        }, i * speed);\r\n      } else if (type === \"return\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.backgroundColor = returnColor;\r\n          barTwoStyle.backgroundColor = returnColor;\r\n        }, i * speed);\r\n      } else if (type === \"comparing\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = compare_left_Margin;\r\n          barTwoStyle.margin = compare_right_Margin;\r\n          barOneStyle.backgroundColor = compareColor;\r\n          barTwoStyle.backgroundColor = compareColor;\r\n        }, i * speed);\r\n      } else if (type === \"memory_overriding\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = memoryOverridingColor;\r\n          barTwoStyle.backgroundColor = memoryOverridingColor;\r\n          let temp = barOneStyle.height;\r\n\r\n          let temp2 = barOne.textContent;\r\n          barOne.textContent = barTwo.textContent;\r\n          barTwo.textContent = temp2;\r\n\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.height = barTwoStyle.height;\r\n          barTwoStyle.height = temp;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSpeedChange = (e) => {\r\n    setAnimationSpeed(e.target.value);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    setArray([]);\r\n    setNoBars(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!noController && (\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Insertion Sort\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n      )}\r\n      {!noController && <Information codeData={codeData.is} />}\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"selected key\", color: keySelectionColor },\r\n          { name: \"compare\", color: compareColor },\r\n          { name: \"memory overriding\", color: memoryOverridingColor },\r\n          { name: \"initial\", color: returnColor },\r\n        ]}\r\n      />\r\n      <hr />\r\n      <div className=\"Container\">\r\n        {array.map((i, idx) => {\r\n          return (\r\n            <Bar\r\n              height={i}\r\n              noBars={noBars}\r\n              returnColor={returnColor}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <hr />\r\n      {!noController && (\r\n        <div className=\"controlls-container w-100\">\r\n          <Controller\r\n            resetArray={resetArray}\r\n            operation={insertionSort}\r\n            handleSpeedChange={handleSpeedChange}\r\n            handleSizeChange={handleSizeChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default InsertionSort;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport Information from \"../../../material-ui-components/information\";\r\nimport { Bar } from \"../bar/bar\";\r\nimport { ColorIndicator } from \"../colorIndicator/colorIndicator\";\r\nimport { Controller } from \"../controller/controller\";\r\nimport \"./selection-sort-style.css\";\r\nimport codeData from \"./../../../data\";\r\n\r\nconst randonIntFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst SelectionSort = forwardRef(({ size = 25, noController = false }, ref) => {\r\n  const [array, setArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(1);\r\n  const [noBars, setNoBars] = useState(size);\r\n\r\n  //   --------------------------------------------------------------------------------\r\n  //    COLORS HERE\r\n\r\n  const j_variable = \"#0E86D4\";\r\n  const k_variable = \"#055C9D\";\r\n  const returnColor = \"rgb(63,81,181)\"; // return and initial color are same\r\n  const compareColor = \"rgb(216, 10, 74)\";\r\n  const swapColor = \"rgb(63,81,181)\";\r\n\r\n  //    MARGIN VARIABLES\r\n  const normalMargin = \"2px\";\r\n  const compare_left_Margin = \"0px 5px 0px 12px\";\r\n  const compare_right_Margin = \"0px 12px 0px 5px\";\r\n\r\n  //   --------------------------------------------------------------------------------\r\n\r\n  const resetArray = () => {\r\n    let temp = [];\r\n    for (let i = 0; i < noBars; i++) temp.push(randonIntFromInterval(50, 400));\r\n    const arrayBar = Array.from(document.getElementsByClassName(\"array-bar\"));\r\n    arrayBar.forEach((i) => {\r\n      i.style.backgroundColor = returnColor;\r\n      i.style.color = \"black\";\r\n    });\r\n    setArray(temp);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  const compute = () => {\r\n    const animation = [];\r\n    let i, j, k;\r\n    for (i = 0; i < array.length; i++) {\r\n      for (j = i, k = j; j < array.length; j++) {\r\n        animation.push({ type: \"j_k_value\", value: [j, k] });\r\n        animation.push({ type: \"comparing\", value: [j, k] });\r\n        animation.push({ type: \"return\", value: [j, k] });\r\n        if (array[j] < array[k]) {\r\n          k = j;\r\n          animation.push({ type: \"j_k_value\", value: [j, k] });\r\n        }\r\n        animation.push({ type: \"return\", value: [j, k] });\r\n      }\r\n      let temp = array[k];\r\n      array[k] = array[i];\r\n      array[i] = temp;\r\n      animation.push({ type: \"swap\", value: [i, k] });\r\n    }\r\n    return animation;\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    start() {\r\n      insertionSort();\r\n    },\r\n  }));\r\n\r\n  const insertionSort = () => {\r\n    const animations = compute(array);\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    let speed = 1000 / animationSpeed;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const { type, value } = animations[i];\r\n      const [barIdxOne, barIdxTwo] = value;\r\n\r\n      const barOne = arrayBar[barIdxOne];\r\n      const barTwo = arrayBar[barIdxTwo];\r\n\r\n      const barOneStyle = arrayBar[barIdxOne].style;\r\n      const barTwoStyle = arrayBar[barIdxTwo].style;\r\n      if (type === \"j_k_value\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = j_variable;\r\n          barTwoStyle.backgroundColor = k_variable;\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n        }, i * speed);\r\n      } else if (type === \"return\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.backgroundColor = returnColor;\r\n          barTwoStyle.backgroundColor = returnColor;\r\n        }, i * speed);\r\n      } else if (type === \"comparing\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = compare_left_Margin;\r\n          barTwoStyle.margin = compare_right_Margin;\r\n          barOneStyle.backgroundColor = compareColor;\r\n          barTwoStyle.backgroundColor = compareColor;\r\n        }, i * speed);\r\n      } else if (type === \"swap\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = swapColor;\r\n          barTwoStyle.backgroundColor = swapColor;\r\n          let temp = barOneStyle.height;\r\n\r\n          let temp2 = barOne.textContent;\r\n          barOne.textContent = barTwo.textContent;\r\n          barTwo.textContent = temp2;\r\n\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.height = barTwoStyle.height;\r\n          barTwoStyle.height = temp;\r\n        }, i * speed);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSpeedChange = (e) => {\r\n    setAnimationSpeed(e.target.value);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    setArray([]);\r\n    setNoBars(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!noController && (\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Selection Sorts\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n      )}\r\n      {!noController && <Information codeData={codeData.ss} />}\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"j variable\", color: j_variable },\r\n          { name: \"k variable\", color: k_variable },\r\n          { name: \"swap\", color: swapColor },\r\n          { name: \"compare\", color: compareColor },\r\n          { name: \"initial\", color: returnColor },\r\n        ]}\r\n      />\r\n      <hr />\r\n      <div className=\"Container\">\r\n        {array.map((i, idx) => {\r\n          return (\r\n            <Bar\r\n              height={i}\r\n              noBars={noBars}\r\n              returnColor={returnColor}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <hr />\r\n      {!noController && (\r\n        <div className=\"controlls-container w-100\">\r\n          <Controller\r\n            resetArray={resetArray}\r\n            operation={insertionSort}\r\n            handleSpeedChange={handleSpeedChange}\r\n            handleSizeChange={handleSizeChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SelectionSort;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport Information from \"../../../material-ui-components/information\";\r\nimport { Bar } from \"../bar/bar\";\r\nimport { ColorIndicator } from \"../colorIndicator/colorIndicator\";\r\nimport { Controller } from \"../controller/controller\";\r\nimport \"./quick-sort-style.css\";\r\nimport codeData from \"./../../../data\";\r\n\r\nconst randonIntFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst QuickSort = forwardRef(({ size = 25, noController = false }, ref) => {\r\n  const [array, setArray] = useState([]);\r\n  const [animationSpeed, setAnimationSpeed] = useState(1);\r\n  const [noBars, setNoBars] = useState(size);\r\n\r\n  //   --------------------------------------------------------------------------------\r\n  //    COLORS HERE\r\n\r\n  const pivotColor = \"rgb(115, 146, 146)\";\r\n  const i_Color = \"yellow\";\r\n  const j_Color = \"pink\";\r\n  const returnColor = \"rgb(63,81,181)\"; // return and initial color are same\r\n  const compareColor = \"rgb(216, 10, 74)\";\r\n  const swapColor = \"green\";\r\n\r\n  //    MARGIN VARIABLES\r\n  const normalMargin = \"2px\";\r\n  const compare_left_Margin = \"0px 5px 0px 8px\";\r\n  const compare_right_Margin = \"0px 8px 0px 5px\";\r\n\r\n  //   --------------------------------------------------------------------------------\r\n\r\n  const resetArray = () => {\r\n    let temp = [];\r\n    for (let i = 0; i < noBars; i++) temp.push(randonIntFromInterval(50, 400));\r\n    temp.push(450);\r\n    const arrayBar = Array.from(document.getElementsByClassName(\"array-bar\"));\r\n    arrayBar.forEach((i) => {\r\n      i.style.backgroundColor = returnColor;\r\n      i.style.color = \"black\";\r\n    });\r\n    setArray(temp);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //   +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\n\r\n  const compute = (array) => {\r\n    const animation = [];\r\n\r\n    const swap = (i, j) => {\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n      animation.push({ type: \"swap\", value: [i, j] });\r\n      animation.push({ type: \"return\", value: [i, j] });\r\n    };\r\n\r\n    const partition = (l, h) => {\r\n      let pivot = array[l];\r\n      let i = l;\r\n      let j = h;\r\n      animation.push({ type: \"pivot\", value: [l, l] });\r\n\r\n      do {\r\n        do {\r\n          animation.push({ type: \"i_value\", value: [i, i] });\r\n          animation.push({ type: \"return\", value: [i, i] });\r\n          i++;\r\n        } while (array[i] <= pivot);\r\n        animation.push({ type: \"i_value\", value: [i, i] });\r\n\r\n        do {\r\n          animation.push({ type: \"j_value\", value: [j, j] });\r\n          animation.push({ type: \"return\", value: [j, j] });\r\n          j--;\r\n        } while (array[j] > pivot);\r\n        animation.push({ type: \"j_value\", value: [j, j] });\r\n\r\n        animation.push({ type: \"compare\", value: [i, j] });\r\n        animation.push({ type: \"return\", value: [i, j] });\r\n        if (i < j) {\r\n          swap(i, j);\r\n        }\r\n      } while (i < j);\r\n      swap(l, j);\r\n      return j;\r\n    };\r\n\r\n    const quick = (l, h) => {\r\n      let j;\r\n      if (l < h) {\r\n        j = partition(l, h);\r\n        animation.push({ type: \"pivot\", value: [j, j] });\r\n        quick(l, j);\r\n        quick(j + 1, h);\r\n      }\r\n    };\r\n\r\n    quick(0, array.length - 1);\r\n\r\n    return animation;\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    start() {\r\n      quickSort();\r\n    },\r\n  }));\r\n\r\n  const quickSort = () => {\r\n    const animations = compute(array);\r\n\r\n    const arrayBar = document.getElementsByClassName(\"array-bar\");\r\n    let speed = 1000 / animationSpeed;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const { type, value } = animations[i];\r\n      const [barIdxOne, barIdxTwo] = value;\r\n\r\n      const barOne = arrayBar[barIdxOne];\r\n      const barTwo = arrayBar[barIdxTwo];\r\n      // console.log(barIdxOne);\r\n      const barOneStyle = arrayBar[barIdxOne].style;\r\n      const barTwoStyle = arrayBar[barIdxTwo].style;\r\n      if (type === \"return\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.backgroundColor = returnColor;\r\n          barTwoStyle.backgroundColor = returnColor;\r\n        }, i * speed);\r\n      } else if (type === \"i_value\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.backgroundColor = i_Color;\r\n          barTwoStyle.backgroundColor = i_Color;\r\n        }, i * speed);\r\n      } else if (type === \"j_value\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.backgroundColor = j_Color;\r\n          barTwoStyle.backgroundColor = j_Color;\r\n        }, i * speed);\r\n      } else if (type === \"compare\") {\r\n        setTimeout(() => {\r\n          barOneStyle.margin = compare_left_Margin;\r\n          barTwoStyle.margin = compare_right_Margin;\r\n          barOneStyle.backgroundColor = compareColor;\r\n          barTwoStyle.backgroundColor = compareColor;\r\n        }, i * speed);\r\n      } else if (type === \"swap\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = swapColor;\r\n          barTwoStyle.backgroundColor = swapColor;\r\n          let temp = barOneStyle.height;\r\n\r\n          let temp2 = barOne.textContent;\r\n          barOne.textContent = barTwo.textContent;\r\n          barTwo.textContent = temp2;\r\n\r\n          barOneStyle.margin = normalMargin;\r\n          barTwoStyle.margin = normalMargin;\r\n          barOneStyle.height = barTwoStyle.height;\r\n          barTwoStyle.height = temp;\r\n        }, i * speed);\r\n      } else if (type === \"pivot\") {\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = pivotColor;\r\n          barTwoStyle.backgroundColor = pivotColor;\r\n          barOneStyle.color = \"white\";\r\n          barTwoStyle.color = \"white\";\r\n        }, i * speed);\r\n      }\r\n      setTimeout(() => {\r\n        console.log(type, value);\r\n      }, i * speed);\r\n    }\r\n  };\r\n\r\n  const handleSpeedChange = (e) => {\r\n    setAnimationSpeed(e.target.value);\r\n  };\r\n\r\n  const handleSizeChange = (e) => {\r\n    setArray([]);\r\n    setNoBars(e.target.value);\r\n    // resetArray();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!noController && (\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Quick Sort\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n      )}\r\n      {!noController && <Information codeData={codeData.qs} />}\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"pivot\", color: pivotColor },\r\n          { name: \"j variable\", color: j_Color },\r\n          { name: \"i variable\", color: i_Color },\r\n          { name: \"compare\", color: compareColor },\r\n          { name: \"swap\", color: swapColor },\r\n          { name: \"initial\", color: returnColor },\r\n        ]}\r\n      />\r\n      <hr />\r\n      <div className=\"Container\">\r\n        {array.map((i, idx) => {\r\n          return (\r\n            <Bar\r\n              height={i}\r\n              noBars={noBars}\r\n              returnColor={returnColor}\r\n              key={idx}\r\n            />\r\n          );\r\n        })}\r\n        {/* <div className=\"line\"></div> */}\r\n      </div>\r\n      <hr />\r\n      {!noController && (\r\n        <div className=\"controlls-container w-100\">\r\n          <Controller\r\n            resetArray={resetArray}\r\n            operation={quickSort}\r\n            handleSpeedChange={handleSpeedChange}\r\n            handleSizeChange={handleSizeChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default QuickSort;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 350,\r\n    backgroundColor: \"#DEE2EC\",\r\n    transition: \"all 0.5s ease-out\",\r\n\r\n    \"&:hover\": {\r\n      boxShadow: \"0 1.2rem 1.2rem rgb(0 0 0 / 15%)\",\r\n      backgroundColor: \"#0C6170\",\r\n      transition: \"all 0.5s ease-in\",\r\n    },\r\n  },\r\n  media: {\r\n    minHeight: 220,\r\n  },\r\n\r\n  colorHeading: {\r\n    maxHeight: 220,\r\n\r\n    color: \"black\",\r\n    \"&:hover\": {\r\n      // backgroundColor: \"#f8f3eb\",\r\n      color: \"white\",\r\n      border: \"1px solid #3f51b5\",\r\n    },\r\n  },\r\n});\r\n\r\nexport default function Algorithms(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <NavLink\r\n        to={props.url}\r\n        className={classes.colorHeading}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <CardActionArea>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={props.image}\r\n            title={props.title}\r\n          />\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {props.title}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </NavLink>\r\n      {/* <CardActions>\r\n        <Button variant=\"outlined\" size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions> */}\r\n    </Card>\r\n  );\r\n}\r\n","export const algorithmsData = [\r\n  {\r\n    id: 1,\r\n    title: \"Array\",\r\n    image:\r\n      \"https://res.cloudinary.com/monkey-codes/image/upload/v1494831769/algorithms/array_insert_vjgpaz.gif\",\r\n    url: \"/array\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Stack\",\r\n    image: \"https://prmoreira23.github.io/assets/stack-data-structure.gif\",\r\n    url: \"/stack\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Queue\",\r\n    image:\r\n      \"https://res.cloudinary.com/practicaldev/image/fetch/s--LTu3kVda--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://1.bp.blogspot.com/-N-v_FiIdQXM/XlkFCQQYtPI/AAAAAAAAHR0/zxkuX6WfQS8Y8Mkoj1nHZDWtMOD3MjsUwCLcBGAsYHQ/s1600/0_E33E-AjyAUTFjVmM.gif\",\r\n    url: \"/queue\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Linked List\",\r\n    image:\r\n      \"https://i.pinimg.com/originals/80/b7/86/80b786e6c049bba93d7c187d9e4c32ab.gif\",\r\n    url: \"/single-LL\",\r\n  },\r\n\r\n  {\r\n    id: 5,\r\n    title: \"Linear Searching\",\r\n    image:\r\n      \"https://www.codesdope.com/staticroot/images/algorithm/binary_search.gif\",\r\n    url: \"/LinearSearch\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Binary Searching\",\r\n    image:\r\n      \"https://www.codesdope.com/staticroot/images/algorithm/binary_search.gif\",\r\n    url: \"/binary-search\",\r\n  },\r\n\r\n  {\r\n    id: 7,\r\n    title: \"Bubble Sort\",\r\n    image: \"https://miro.medium.com/max/3840/1*p_wD00rbc6RkA8w6lqqCkg.gif\",\r\n    url: \"/bubble-sort\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Insertion Sort\",\r\n    image: \"https://www.erikedrosa.com/imgs/insertionsort.gif\",\r\n    url: \"/insertion-search\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"Selection Sort\",\r\n    image: \"https://miro.medium.com/max/3840/1*k0dHMa2l2bRr95VB4llOqw.gif\",\r\n    url: \"/selection-search\",\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Quick Sort\",\r\n    image:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/9/9c/Quicksort-example.gif\",\r\n    url: \"/quick-search\",\r\n  },\r\n  {\r\n    id: 12,\r\n    title: \"Binary Tree\",\r\n    image:\r\n      \"https://www.gormanalysis.com/blog/making-a-binary-search-tree-in-cpp_files/InsertSmart.gif\",\r\n    url: \"/binary-tree\",\r\n  },\r\n  {\r\n    id: 13,\r\n    title: \"AVL Tree\",\r\n    image:\r\n      \"https://d18l82el6cdm1i.cloudfront.net/uploads/4pXeq3AlGO-avlinsert.gif\",\r\n    url: \"/avl-tree\",\r\n  },\r\n  {\r\n    id: 14,\r\n    title: \"Path Finding Algorithm\",\r\n    image: \"https://surfingthecode.com/img/dijkstra.gif\",\r\n    url: \"/path-finding\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport { FaLinkedinIn } from \"react-icons/fa\";\r\n\r\nconst Member = (props) => {\r\n  return (\r\n    <li key={props.key}>\r\n      <a href={props.LinkedInUrl}>\r\n        {/* <FaLinkedinIn className=\"linkedin-icon\" size={30} /> */}\r\n\r\n        {props.name}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","import React from \"react\";\r\nimport Member from \"./Member\";\r\nimport { HiOutlineDotsVertical } from \"react-icons/hi\";\r\n\r\nconst data = [\r\n  {\r\n    id: 1,\r\n    name: \"AnmolKumar Shah\",\r\n    LinkedInUrl: \"https://www.linkedin.com/in/anmolkumar-shah-a55694170/\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Surendra Jangid\",\r\n    LinkedInUrl: \"https://www.linkedin.com/in/cse-surendra-jangid\",\r\n  },\r\n];\r\n\r\nconst other = [\r\n  {\r\n    id: 4,\r\n    name: \"Prof. Nisarg Gandhewar\",\r\n    LinkedInUrl: \"https://www.linkedin.com/in/shivam-grover-1aa14b169/\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Harshit Barde\",\r\n    LinkedInUrl: \"https://www.linkedin.com/in/harshit-a-barde-b783861b8/\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Shivam Grover\",\r\n    LinkedInUrl: \"https://www.linkedin.com/in/shivam-grover-1aa14b169/\",\r\n  },\r\n];\r\n\r\nconst sourceCode = [\r\n  {\r\n    id: 33,\r\n    name: \"Frontend\",\r\n    LinkedInUrl: \"https://github.com/AnmolkumarShah/DatAlgo\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Backend\",\r\n    LinkedInUrl: \"https://github.com/AnmolkumarShah/DatAlgo-Backend\",\r\n  },\r\n];\r\n\r\nconst tech = [\r\n  {\r\n    id: 33222222,\r\n    name: \"ReactJS\",\r\n  },\r\n  {\r\n    id: 423,\r\n    name: \"NodeJS\",\r\n  },\r\n  {\r\n    id: 44,\r\n    name: \"MongoDB\",\r\n  },\r\n];\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"footer py-3 mt-5\">\r\n        {/* <div className=\"footerLogo d-flex justify-content-center\">\r\n          <h1> DatAlgo</h1>\r\n        </div> */}\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"footerContent text-center\">\r\n              <h4 className=\"py-3\">Designed & Developed By </h4>\r\n              <ul className=\"members d-flex justify-content-center align-items-center\">\r\n                {data.map((memb, idx) => {\r\n                  return (\r\n                    <>\r\n                      <Member\r\n                        key={idx}\r\n                        name={memb.name}\r\n                        LinkedInUrl={memb.LinkedInUrl}\r\n                      />\r\n                      {idx < data.length - 1 ? (\r\n                        <HiOutlineDotsVertical size={25} />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </>\r\n                  );\r\n                })}\r\n              </ul>\r\n              <h4 className=\"py-3\">Co-ordinated By </h4>\r\n              <ul className=\"members d-flex justify-content-center align-items-center\">\r\n                {other.map((memb, idx) => {\r\n                  return (\r\n                    <>\r\n                      <Member\r\n                        key={idx}\r\n                        name={memb.name}\r\n                        LinkedInUrl={memb.LinkedInUrl}\r\n                      />\r\n                      {idx < data.length ? (\r\n                        <HiOutlineDotsVertical size={25} />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"footerContent text-center\">\r\n              <h4 className=\"py-3\">Source Code</h4>\r\n              <ul className=\"members d-flex justify-content-center align-items-center\">\r\n                {sourceCode.map((memb, idx) => {\r\n                  return (\r\n                    <>\r\n                      <Member\r\n                        key={idx}\r\n                        name={memb.name}\r\n                        LinkedInUrl={memb.LinkedInUrl}\r\n                      />\r\n                      {idx < data.length - 1 ? (\r\n                        <HiOutlineDotsVertical size={25} />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n            <div className=\"footerContent text-center\">\r\n              <h4 className=\"py-3\">Technology Used</h4>\r\n              <ul className=\"members d-flex justify-content-center align-items-center\">\r\n                {tech.map((memb, idx) => {\r\n                  return (\r\n                    <>\r\n                      <Member key={idx} name={memb.name} LinkedInUrl={\"/\"} />\r\n                      {idx < data.length ? (\r\n                        <HiOutlineDotsVertical size={25} />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"conpyRights text-white bg-danger\">\r\n        <p className=\"text-center m-0 lead\">\r\n          Made with <span>&#9829;</span> in India\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Algorithms from \"./Algorithms\";\r\nimport { algorithmsData } from \"./algorithmsData\";\r\nimport \"./home.css\";\r\nimport Footer from \"./footer/Footer\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"homeCompo px-0\"\r\n        style={{\r\n          paddingTop: \"90px\",\r\n        }}\r\n      >\r\n        <div className=\"homeTop text-center pb-5\">\r\n          <div className=\"homeHeadings\">\r\n            <h1>\r\n              <b style={{ color: \"#0A4158\" }}>Dat</b>\r\n              <b style={{ color: \"#4B8378\" }}>Algo</b>\r\n            </h1>\r\n            <h3 className=\"pt-3\">\r\n              A tool to Visualize Data Structure & Algorithm\r\n            </h3>\r\n          </div>\r\n\r\n          {/* <div className=\"homeimg\">\r\n            <img src={homeImg} alt=\"Home\" className=\"mg-thumbnail\" />\r\n          </div> */}\r\n        </div>\r\n\r\n        <div className=\"container-fluid\">\r\n          <div\r\n            className=\"d-flex flex-wrap justify-content-center\"\r\n            style={{ gap: \"15px\" }}\r\n          >\r\n            {/* <ul  className=\"d-flex flex-wrap list-unstyled\" style={{ gap: \"20px\" ,margin:\"0 auto\" }}> */}\r\n            {algorithmsData.map((algo, idx) => {\r\n              return (\r\n                <div className=\"shadow-sm\" style={{ height: \"min-content\" }}>\r\n                  <Algorithms\r\n                    title={algo.title}\r\n                    image={algo.image}\r\n                    url={algo.url}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n            {/* </ul> */}\r\n          </div>\r\n        </div>\r\n\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React, { useState } from \"react\";\r\nimport \"./node-style.css\";\r\n\r\nconst Node = ({\r\n  isStart,\r\n  isTarget,\r\n  row,\r\n  col,\r\n  isWall,\r\n  onMouseDown,\r\n  onMouseEnter,\r\n  onMouseUp,\r\n}) => {\r\n  let extraClasses = isStart\r\n    ? \"start-node\"\r\n    : isTarget\r\n    ? \"target-node\"\r\n    : isWall\r\n    ? \"node-wall\"\r\n    : \"\";\r\n  return (\r\n    <div\r\n      id={`node-${row}-${col}`}\r\n      className={`node ${extraClasses}`}\r\n      onMouseDown={() => onMouseDown(row, col)}\r\n      onMouseEnter={() => onMouseEnter(row, col)}\r\n      onMouseUp={() => onMouseUp()}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Node;\r\n","export function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // if (closestNode.isStart) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const { col, row } = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter((neighbor) => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Node from \"./Node\";\r\nimport \"./main-style.css\";\r\nimport { dijkstra, getNodesInShortestPathOrder } from \"./algorithms/dijkstra\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\nimport Information from \"../../material-ui-components/information\";\r\nimport codeData from \"./../../data\";\r\n\r\nconst PathFinding = () => {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [mouseIsPressed, setMouseIsPressed] = useState(false);\r\n\r\n  const [START_NODE_ROW, SET_START_NODE_ROW] = useState(3);\r\n  const [START_NODE_COL, SET_START_NODE_COL] = useState(5);\r\n  const [FINISH_NODE_ROW, SET_FINISH_NODE_ROW] = useState(10);\r\n  const [FINISH_NODE_COL, SET_FINISH_NODE_COL] = useState(35);\r\n\r\n  const ALL_ROWS = 23;\r\n  const ALL_COLS = 58;\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const toggleChecked = () => {\r\n    setChecked((prev) => !prev);\r\n  };\r\n\r\n  const animateDijkstra = (visitedNodesInOrder, nodesInShortestPathOrder) => {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n      if (i === visitedNodesInOrder.length) {\r\n        setTimeout(() => {\r\n          animateShortestPath(nodesInShortestPathOrder);\r\n        }, 10 * i);\r\n        return;\r\n      }\r\n      setTimeout(() => {\r\n        const node = visitedNodesInOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className +=\r\n          \" node node-visited\";\r\n      }, 10 * i);\r\n    }\r\n  };\r\n\r\n  const animateShortestPath = (nodesInShortestPathOrder) => {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className +=\r\n          \" node node-shortest-path\";\r\n      }, 50 * i);\r\n    }\r\n  };\r\n\r\n  const visualizeDijkstra = () => {\r\n    const startNode = nodes[START_NODE_ROW][START_NODE_COL];\r\n    const finishNode = nodes[FINISH_NODE_ROW][FINISH_NODE_COL];\r\n    const visitedNodesInOrder = dijkstra(nodes, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  };\r\n\r\n  const handleMouseDown = (row, col) => {\r\n    const newGrid = getNewGridWithWallToggled(nodes, row, col);\r\n    setNodes(newGrid);\r\n    setMouseIsPressed(true);\r\n  };\r\n\r\n  const handleMouseEnter = (row, col) => {\r\n    if (!mouseIsPressed) return;\r\n    const newGrid = getNewGridWithWallToggled(nodes, row, col);\r\n    setNodes(newGrid);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setMouseIsPressed(false);\r\n  };\r\n\r\n  const getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const init = () => {\r\n    const vertical = [];\r\n    for (let i = 0; i < ALL_ROWS; i++) {\r\n      const horizontal = [];\r\n      for (let j = 0; j < ALL_COLS; j++) {\r\n        const currentNode = {\r\n          row: i,\r\n          col: j,\r\n          isStart: i === START_NODE_ROW && j === START_NODE_COL,\r\n          isTarget: i === FINISH_NODE_ROW && j === FINISH_NODE_COL,\r\n          distance: Infinity,\r\n          isVisited: false,\r\n          isWall: false,\r\n          previousNode: null,\r\n        };\r\n        horizontal.push(currentNode);\r\n      }\r\n      vertical.push(horizontal);\r\n    }\r\n    setNodes(vertical);\r\n  };\r\n\r\n  const handleClear = () => {};\r\n\r\n  return (\r\n    <div\r\n      className=\"mt-3 d-flex align-items-center justify-content-center\"\r\n      style={{ height: \"90vh\" }}\r\n    >\r\n      <div className=\"nodes\">\r\n        {/* <Button className=\"btn btn-primary\" onClick={handleClear}>\r\n        Clear\r\n      </Button>\r\n\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={<Switch checked={checked} onChange={toggleChecked} />}\r\n          label={checked ? \"Move Source\" : \"Move Target\"}\r\n        />\r\n      </FormGroup> */}\r\n\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Path Finding\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n        <Information codeData={codeData.pf} />\r\n        <div className=\"over-cover\">\r\n          {nodes.map((item, idx) => {\r\n            return (\r\n              <div key={idx} className=\"nodes\">\r\n                {item.map((n, idx) => {\r\n                  return (\r\n                    <Node\r\n                      key={idx}\r\n                      isStart={n.isStart}\r\n                      isTarget={n.isTarget}\r\n                      row={n.row}\r\n                      col={n.col}\r\n                      isWall={n.isWall}\r\n                      mouseIsPressed={mouseIsPressed}\r\n                      onMouseDown={(row, col) => handleMouseDown(row, col)}\r\n                      onMouseEnter={(row, col) => handleMouseEnter(row, col)}\r\n                      onMouseUp={() => handleMouseUp()}\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"controlls-container\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <Button\r\n                className=\"Button\"\r\n                variant=\"outlined\"\r\n                onClick={visualizeDijkstra}\r\n              >\r\n                Start\r\n              </Button>\r\n            </div>\r\n            <form className=\"col\">\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"Button\"\r\n                variant=\"outlined\"\r\n                onClick={handleClear}\r\n              >\r\n                Clear\r\n              </Button>\r\n            </form>\r\n            <div className=\"col\">\r\n              <img alt=\"target\" src=\"./images/source.png\"></img>Initial Position\r\n            </div>\r\n            <div className=\"col\">\r\n              <img alt=\"target\" src=\"./images/target.jpg\"></img>\r\n              Destination\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PathFinding;\r\n","class Node {\r\n  constructor(data) {\r\n    this.name = data;\r\n    this.children = [];\r\n  }\r\n}\r\n\r\nexport default class BinaryTree {\r\n  constructor(data) {\r\n    this.queue = [];\r\n    this.root = new Node(data.shift());\r\n    this.root.children = [];\r\n    this.queue.push(this.root);\r\n    this.traverseList = [];\r\n\r\n    while (this.queue.length !== 0) {\r\n      let p = this.queue.shift();\r\n\r\n      // element on index 1 is consider to be left element and on index 0 is consider as right\r\n\r\n      let element = data.shift();\r\n      if (element !== -1) {\r\n        let rchild = new Node(element);\r\n        rchild.children = [];\r\n        this.queue.push(rchild);\r\n        p.children[1] = rchild;\r\n      }\r\n\r\n      element = data.shift();\r\n      if (element !== -1) {\r\n        let lchild = new Node(element);\r\n        lchild.children = [];\r\n        this.queue.push(lchild);\r\n        p.children[0] = lchild;\r\n      }\r\n    }\r\n  }\r\n  display() {\r\n    return this.root;\r\n  }\r\n\r\n  clearTraverseList() {\r\n    this.traverseList = [];\r\n  }\r\n\r\n  getTraverseList() {\r\n    return this.traverseList;\r\n  }\r\n\r\n  preOrder(root) {\r\n    if (root) {\r\n      this.traverseList.push(root);\r\n      this.preOrder(root.children[1]); // left\r\n      this.preOrder(root.children[0]); // right\r\n    }\r\n  }\r\n\r\n  postOrder(root) {\r\n    if (root) {\r\n      this.postOrder(root.children[1]); // left\r\n      this.postOrder(root.children[0]); // right\r\n      this.traverseList.push(root);\r\n    }\r\n  }\r\n\r\n  inOrder(root) {\r\n    if (root) {\r\n      this.inOrder(root.children[1]); // left\r\n      this.traverseList.push(root);\r\n      this.inOrder(root.children[0]); // right\r\n    }\r\n  }\r\n\r\n  levelOrder(root) {\r\n    const Q = [];\r\n    this.traverseList.push(root);\r\n    Q.push(root);\r\n    while (Q.length !== 0) {\r\n      let temp = Q.shift();\r\n      if (temp.children[1]) {\r\n        this.traverseList.push(temp.children[1]);\r\n        Q.push(temp.children[1]);\r\n      }\r\n      if (temp.children[0]) {\r\n        this.traverseList.push(temp.children[0]);\r\n        Q.push(temp.children[0]);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport \"./TraversedList.css\";\r\n\r\n// Renders the list of nodes passed in as props and add transition on enter and exit using React Transition group\r\nconst TraversedList = ({ list }) => {\r\n  return (\r\n    <div className=\"numbers-container\">\r\n      <ul className=\"numbers-list\">\r\n        <TransitionGroup component={null}>\r\n          {list.map((num, index) => (\r\n            <CSSTransition key={index} timeout={500} classNames=\"fade\">\r\n              <li className=\"numbers-list-item\" key={index}>\r\n                {num}\r\n              </li>\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TraversedList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BTree from \"./Tree\";\r\nimport Tree from \"react-tree-graph\";\r\nimport \"./style.css\";\r\nimport TraversedList from \"./TraverseList\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\nimport Information from \"../../material-ui-components/information\";\r\nimport { toast } from \"react-toastify\";\r\nimport codeData from \"./../../data\";\r\n\r\nconst BinaryTree = () => {\r\n  const t1 = new BTree([\r\n    34, 23, 92, 12, 4, 7, 80, -1, -1, 16, 9, -1, -1, -1, -1, -1, -1, 50, 45, 75,\r\n    11, 98, 6, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  ]);\r\n\r\n  const [data, setData] = useState([]);\r\n  const [traverlist, setTraverlist] = useState([]);\r\n  const [treeData, setTreeData] = useState(t1);\r\n\r\n  useEffect(() => {\r\n    setData(treeData.display());\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const Delete = (data) => {\r\n    const children = data.children;\r\n    children.forEach((element) => {\r\n      if (element[\"gProps\"]) {\r\n        delete element[\"gProps\"];\r\n        return;\r\n      } else if (data.children.length !== 0) {\r\n        Delete(element);\r\n      }\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const reset = () => {\r\n    setTraverlist([]);\r\n    toast.info(\r\n      \"Please continue clicking CLEAR button until all red node are cleared\"\r\n    );\r\n    const temp = { ...data };\r\n    if (temp[\"gProps\"]) {\r\n      delete temp[\"gProps\"];\r\n      setData(temp);\r\n    } else {\r\n      const updatedList = Delete(temp);\r\n      setData(updatedList);\r\n    }\r\n  };\r\n\r\n  const animateNode = (data, item) => {\r\n    const children = data.children;\r\n    children.forEach((element) => {\r\n      if (element.name === item.name) {\r\n        element[\"gProps\"] = {\r\n          className: \"red-node\",\r\n          onClick: (event, node) => alert(`Clicked ${node}!`),\r\n        };\r\n        return;\r\n      } else if (data.children.length !== 0) {\r\n        animateNode(element, item);\r\n      }\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const animate = (item) => {\r\n    const temp = { ...data };\r\n    if (item.name === temp.name) {\r\n      temp[\"gProps\"] = {\r\n        className: \"red-node\",\r\n        onClick: (event, node) => alert(`Clicked ${node}!`),\r\n      };\r\n      setData(temp);\r\n    } else {\r\n      const updatedList = animateNode(temp, item);\r\n      setData(updatedList);\r\n    }\r\n  };\r\n\r\n  const animateList = (tree) => {\r\n    const list = tree.getTraverseList();\r\n    list.forEach((item, idx) => {\r\n      setTimeout(() => {\r\n        setTraverlist((prev) => [...prev, item.name]);\r\n        animate(item);\r\n      }, 1500 * idx);\r\n    });\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    treeData.clearTraverseList();\r\n    console.log(e.target.value);\r\n    switch (e.target.value) {\r\n      case \"InOrder\":\r\n        treeData.inOrder(treeData.root);\r\n        break;\r\n\r\n      case \"PreOrder\":\r\n        treeData.preOrder(treeData.root);\r\n        break;\r\n\r\n      case \"PostOrder\":\r\n        treeData.postOrder(treeData.root);\r\n        break;\r\n\r\n      case \"LevelOrder\":\r\n        treeData.levelOrder(treeData.root);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const customInput = () => {\r\n    let queue = [];\r\n    let root = prompt(\"Enter root value\");\r\n    if (root) queue.push(root);\r\n    let list = [];\r\n    list.push(root);\r\n\r\n    while (queue.length !== 0) {\r\n      let p = queue.shift();\r\n\r\n      let element = prompt(\r\n        `Enter left child of ${p}, Enter -1 to leave the child.`\r\n      );\r\n      if (element !== \"-1\") {\r\n        list.push(element);\r\n        queue.push(element);\r\n      } else if (element === \"-1\") {\r\n        list.push(element);\r\n      }\r\n      element = prompt(\r\n        `Enter right child of ${p}, Enter -1 to leave the child.`\r\n      );\r\n      if (element !== \"-1\") {\r\n        list.push(element);\r\n        queue.push(element);\r\n      } else if (element === \"-1\") {\r\n        list.push(element);\r\n      }\r\n    }\r\n    list = list.map((i) => {\r\n      return parseInt(i);\r\n    });\r\n    try {\r\n      const temp = new BTree(list);\r\n      setTreeData(temp);\r\n      setData(temp.display());\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container d-flex justify-content-center align-items-center pt-2\">\r\n      <div>\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Binary Tree\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n        <Tree\r\n          data={data}\r\n          height={650}\r\n          width={500}\r\n          animated={true}\r\n          duration={500}\r\n          svgProps={{\r\n            transform: \"rotate(90)\",\r\n          }}\r\n          textProps={{\r\n            transform: \"rotate(270)\",\r\n          }}\r\n        />\r\n        <Information codeData={codeData.bt} />\r\n        <TraversedList list={traverlist} />\r\n\r\n        <div className=\"controlls-container w-100\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <form>\r\n                <select onChange={changeHandler} className=\"form-control\">\r\n                  <option selected value={\"title\"}>\r\n                    Please Select\r\n                  </option>\r\n                  <option value={\"PreOrder\"}>PreOrder</option>\r\n                  <option value={\"PostOrder\"}>PostOrder</option>\r\n                  <option value={\"InOrder\"}>InOrder</option>\r\n                  <option value={\"LevelOrder\"}>LevelOrder</option>\r\n                </select>\r\n              </form>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <Button\r\n                onClick={() => animateList(treeData)}\r\n                className=\"Button\"\r\n                variant=\"outlined\"\r\n              >\r\n                Start\r\n              </Button>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <Button\r\n                onClick={reset}\r\n                className=\"Button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Clear\r\n              </Button>\r\n            </div>\r\n            {/* <div className=\"col-4\">\r\n              <Button\r\n                onClick={customInput}\r\n                className=\"Button\"\r\n                variant=\"outlined\"\r\n              >\r\n                Custom Input\r\n              </Button>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BinaryTree;\r\n","class Node {\r\n  constructor(data = null) {\r\n    this.name = data;\r\n    this.height = 0;\r\n    this.lchild = null;\r\n    this.rchild = null;\r\n  }\r\n}\r\n\r\nexport default class AVLTree {\r\n  constructor(data) {\r\n    this.root = new Node(data);\r\n  }\r\n\r\n  getRoot() {\r\n    return this.root;\r\n  }\r\n\r\n  setRoot(r) {\r\n    this.root = r;\r\n  }\r\n\r\n  inPre(p) {\r\n    while (p && p.rchild !== null) p = p.rchild;\r\n    return p;\r\n  }\r\n\r\n  inSucc(p) {\r\n    while (p && p.lchild !== null) p = p.lchild;\r\n    return p;\r\n  }\r\n\r\n  Delete(p, key) {\r\n    console.log(key);\r\n    let q;\r\n    if (!p) {\r\n      return null;\r\n    }\r\n    if (p.name === key && !p.lchild && !p.rchild) {\r\n      if (p === this.root) {\r\n        this.root = null;\r\n      }\r\n      return null;\r\n    }\r\n    if (key < p.name) {\r\n      p.lchild = this.Delete(p.lchild, key);\r\n    } else if (key > p.name) {\r\n      p.rchild = this.Delete(p.rchild, key);\r\n    } else {\r\n      if (this.NodeHeight(p.lchild) > this.NodeHeight(p.rchild)) {\r\n        q = this.inPre(p.lchild);\r\n        p.name = q.name;\r\n        p.lchild = this.Delete(p.lchild, q.name);\r\n      } else {\r\n        q = this.inSucc(p.rchild);\r\n        p.name = q.name;\r\n        p.rchild = this.Delete(p.rchild, q.name);\r\n      }\r\n    }\r\n    p.height = this.NodeHeight(p);\r\n\r\n    if (this.balanceFactor(p) === 2 && this.balanceFactor(p.lchild) <= 1)\r\n      return this.LLRotation(p);\r\n    else if (this.balanceFactor(p) === 2 && this.balanceFactor(p.lchild) === -1)\r\n      return this.LRRotation(p);\r\n    else if (this.balanceFactor(p) === -2 && this.balanceFactor(p.rchild) >= -1)\r\n      return this.RRRotation(p);\r\n    else if (this.balanceFactor(p) === -2 && this.balanceFactor(p.rchild) === 1)\r\n      return this.RLRotation(p);\r\n\r\n    return p;\r\n  }\r\n\r\n  insert(p, key) {\r\n    if (p == null) {\r\n      let t = new Node(key);\r\n      t.lchild = t.rchild = null;\r\n      t.height = 1;\r\n      return t;\r\n    }\r\n    if (key < p.name) {\r\n      p.lchild = this.insert(p.lchild, key);\r\n    } else if (key > p.name) {\r\n      p.rchild = this.insert(p.rchild, key);\r\n    }\r\n    p.height = this.NodeHeight(p);\r\n\r\n    if (this.balanceFactor(p) === 2 && this.balanceFactor(p.lchild) === 1)\r\n      return this.LLRotation(p);\r\n    else if (this.balanceFactor(p) === 2 && this.balanceFactor(p.lchild) === -1)\r\n      return this.LRRotation(p);\r\n    else if (\r\n      this.balanceFactor(p) === -2 &&\r\n      this.balanceFactor(p.rchild) === -1\r\n    )\r\n      return this.RRRotation(p);\r\n    else if (this.balanceFactor(p) === -2 && this.balanceFactor(p.rchild) === 1)\r\n      return this.RLRotation(p);\r\n\r\n    return p;\r\n  }\r\n\r\n  NodeHeight(p) {\r\n    let hl, hr;\r\n    hl = p && p.lchild ? p.lchild.height : 0;\r\n    hr = p && p.rchild ? p.rchild.height : 0;\r\n    return hl > hr ? hl + 1 : hr + 1;\r\n  }\r\n\r\n  balanceFactor(p) {\r\n    let hl, hr;\r\n    hl = p && p.lchild ? p.lchild.height : 0;\r\n    hr = p && p.rchild ? p.rchild.height : 0;\r\n    return hl - hr;\r\n  }\r\n\r\n  RRRotation(p) {\r\n    let pr = p.rchild;\r\n    let prl = pr.lchild;\r\n    pr.lchild = p;\r\n    p.rchild = prl;\r\n    pr.height = this.NodeHeight(pr);\r\n    p.height = this.NodeHeight(p);\r\n    if (this.root === p) this.root = pr;\r\n    return pr;\r\n  }\r\n\r\n  RLRotation(p) {\r\n    let pr = p.rchild;\r\n    let prl = pr.lchild;\r\n    pr.lchild = prl.rchild;\r\n    p.rchild = prl.lchild;\r\n    prl.lchild = p;\r\n    prl.rchild = pr;\r\n    prl.height = this.NodeHeight(prl);\r\n    p.height = this.NodeHeight(p);\r\n    pr.height = this.NodeHeight(pr);\r\n    if (this.root === p) this.root = prl;\r\n    return prl;\r\n  }\r\n\r\n  LLRotation(p) {\r\n    let pl = p.lchild;\r\n    let plr = pl.rchild;\r\n    pl.rchild = p;\r\n    p.lchild = plr;\r\n\r\n    p.height = this.NodeHeight(p);\r\n    pl.height = this.NodeHeight(pl);\r\n    if (this.root === p) this.root = pl;\r\n    return pl;\r\n  }\r\n\r\n  LRRotation(p) {\r\n    let pl = p.lchild;\r\n    let plr = pl.rchild;\r\n    pl.rchild = plr.lchild;\r\n    p.lchild = plr.rchild;\r\n    plr.lchild = pl;\r\n    plr.rchild = p;\r\n\r\n    pl.height = this.NodeHeight(pl);\r\n    p.height = this.NodeHeight(p);\r\n    plr.height = this.NodeHeight(plr);\r\n\r\n    if (this.root === p) this.root = plr;\r\n    return plr;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AVLTree from \"./avl-tree\";\r\nimport Tree from \"react-tree-graph\";\r\nimport \"./style.css\";\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\nimport Information from \"../../material-ui-components/information\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport codeData from \"./../../data\";\r\n\r\nconst AVLTrees = () => {\r\n  const [considerTree, setConsiderTree] = useState(null);\r\n  const [isCreated, setCreated] = useState(false);\r\n  const [value, setValue] = useState(null);\r\n  const [data, setData] = useState([]);\r\n  const [toDel, setToDel] = useState(0);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const create = () => {\r\n    let rootvalue = parseInt(prompt(\"Enter the root value\"));\r\n    if (!isNaN(rootvalue)) {\r\n      const temp = new AVLTree(rootvalue);\r\n      setConsiderTree(temp);\r\n      const v = temp.getRoot();\r\n      let result = refactor(v);\r\n      setData(result);\r\n      setCreated(true);\r\n    }\r\n  };\r\n\r\n  const insert = (data) => {\r\n    const v = considerTree.insert(considerTree.getRoot(), data);\r\n    let result = refactor(v);\r\n    setData(result);\r\n  };\r\n\r\n  class rNode {\r\n    constructor(data) {\r\n      this.name = data;\r\n      this.children = [];\r\n      this.gProps = {\r\n        className: \"node\",\r\n        onClick: (event, node) => alert(`Clicked ${node}!`),\r\n      };\r\n    }\r\n  }\r\n\r\n  const refactor = (tree) => {\r\n    if (tree) {\r\n      let t = new rNode(tree.name);\r\n      if (tree.lchild && tree.rchild) {\r\n        t.children.push(refactor(tree.rchild));\r\n        t.children.push(refactor(tree.lchild));\r\n      }\r\n      if (tree.lchild && !tree.rchild) {\r\n        t.children.push(refactor(tree.lchild));\r\n      }\r\n      if (tree.rchild && !tree.lchild) {\r\n        t.children.push(refactor(tree.rchild));\r\n      }\r\n\r\n      return t;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    insert(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  const changeHandler = (e) => {\r\n    setValue(parseInt(e.target.value));\r\n  };\r\n\r\n  const deleteValHandler = (e) => {\r\n    setToDel(e.target.value);\r\n  };\r\n\r\n  const handleDelete = (e) => {\r\n    e.preventDefault();\r\n    let v = considerTree.Delete(considerTree.getRoot(), parseInt(toDel));\r\n    let result = refactor(v);\r\n    setData(result);\r\n    setToDel(\"\");\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setConsiderTree(null);\r\n    setCreated(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5 d-flex align-items-center justify-content-center\">\r\n      <div className=\"top \">\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to AVL Tree\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n        {considerTree && (\r\n          <Tree\r\n            data={data}\r\n            height={600}\r\n            width={400}\r\n            animated={true}\r\n            duration={500}\r\n            svgProps={{\r\n              transform: \"rotate(90)\",\r\n            }}\r\n            textProps={{\r\n              transform: \"rotate(270)\",\r\n            }}\r\n          />\r\n        )}\r\n\r\n        <Information codeData={codeData.avl} />\r\n        <div className=\"controlls-container w-100\">\r\n          {!isCreated && (\r\n            <div className=\"col-1 d-flex align-items-center controlHandler\">\r\n              <Button onClick={create} className=\"Button\" varient=\"outlined\">\r\n                Create\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              {isCreated && (\r\n                <Button\r\n                  onClick={handleClear}\r\n                  className=\"Button\"\r\n                  varient=\"outlined\"\r\n                >\r\n                  Clear\r\n                </Button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              {isCreated && (\r\n                <form onSubmit={handleSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <input\r\n                        placeholder=\"value\"\r\n                        value={value}\r\n                        onChange={changeHandler}\r\n                        className=\"form-control\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        className=\"Button\"\r\n                        varient=\"outlined\"\r\n                      >\r\n                        insert\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"col d-flex align-items-center controlHandler\">\r\n              {isCreated && (\r\n                <form onSubmit={handleDelete}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col\">\r\n                      <input\r\n                        placeholder=\"value\"\r\n                        onChange={deleteValHandler}\r\n                        className=\"form-control\"\r\n                        value={toDel}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <Button\r\n                        type=\"submit\"\r\n                        className=\"Button\"\r\n                        varient=\"outlined\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AVLTrees;\r\n","class Node {\r\n  constructor(data) {\r\n    this.name = data;\r\n    this.children = [];\r\n    this.nodeProps = {\r\n      className: \"node-style\",\r\n    };\r\n  }\r\n}\r\n\r\nexport default class SLinkedList {\r\n  constructor(data) {\r\n    let temp = new Node(data);\r\n    this.head = temp;\r\n    this.tail = temp;\r\n    this.length = 1;\r\n  }\r\n\r\n  len() {\r\n    return this.length;\r\n  }\r\n\r\n  insertFront(data) {\r\n    if (data.length > 2 || data.length === 0) {\r\n      return alert(\r\n        \"Please only enter number between 0 to 100, greater number may spoil the styling.\"\r\n      );\r\n    }\r\n    let temp = new Node(data);\r\n    temp.children.push(this.head);\r\n    this.head = temp;\r\n    this.length += 1;\r\n  }\r\n\r\n  insertBack(data) {\r\n    if (data.length > 2 || data.length === 0) {\r\n      return alert(\r\n        \"Please only enter number between 0 to 100, greater number may spoil the styling.\"\r\n      );\r\n    }\r\n    let temp = new Node(data);\r\n    this.tail.children.push(temp);\r\n    this.tail = this.tail.children[0];\r\n    this.length += 1;\r\n  }\r\n\r\n  insertAfter(index, data) {\r\n    index = parseInt(index);\r\n    if (data.length > 2 || data.length === 0) {\r\n      return alert(\r\n        \"Please only enter number between 0 to 100, greater number may spoil the styling.\"\r\n      );\r\n    }\r\n\r\n    if (index === this.length - 1) {\r\n      return this.insertBack(data);\r\n    }\r\n\r\n    if (index === 0) {\r\n      let val = this.head.name;\r\n      this.delete(\"0\");\r\n      this.insertFront(data);\r\n      this.insertFront(val);\r\n      return;\r\n    }\r\n\r\n    let temp = this.head;\r\n    while (index) {\r\n      temp = temp.children[0];\r\n      index--;\r\n\r\n      const prevChild = temp.children[0];\r\n      const tempNew = new Node(data);\r\n      tempNew.children.push(prevChild);\r\n      temp.children[0] = tempNew;\r\n    }\r\n  }\r\n\r\n  delete(index) {\r\n    index = parseInt(index);\r\n    console.log(index, this.length);\r\n    if (index === 0) {\r\n      let temp = this.head.children[0];\r\n      this.head = temp;\r\n      this.length--;\r\n    } else {\r\n      if (index < this.length) {\r\n        let temp = this.head;\r\n        let prev = null;\r\n        while (index && temp && temp.children.length !== 0) {\r\n          prev = temp;\r\n          temp = temp.children.length > 0 ? temp.children[0] : null;\r\n          index--;\r\n        }\r\n        if (temp.children.length > 0) {\r\n          prev.children[0] = temp.children[0];\r\n        } else {\r\n          prev.children = [];\r\n        }\r\n        this.length--;\r\n      } else {\r\n        return alert(\"Invalid Index\");\r\n      }\r\n    }\r\n  }\r\n\r\n  Reverse() {\r\n    let p = this.head;\r\n    let q = null;\r\n    let r = null;\r\n    while (p) {\r\n      r = q;\r\n      q = p;\r\n      p = p.children[0];\r\n      if (r === null) {\r\n        q.children = [];\r\n      } else {\r\n        q.children[0] = r;\r\n      }\r\n    }\r\n    console.log(this.head);\r\n    this.head = q;\r\n  }\r\n\r\n  display() {\r\n    return this.head;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SLinkedList from \"./singleLinkedListClass\";\r\nimport Tree from \"react-tree-graph\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./llstyle.css\";\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\nimport Information from \"../../material-ui-components/information\";\r\nimport codeData from \"./../../data\";\r\n\r\nconst SingleLinkedList = () => {\r\n  const [sll, setSll] = useState();\r\n  const [data, setData] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [isStart, setIsStart] = useState(false);\r\n\r\n  const [, setRender] = useState({});\r\n  const forceRerender = () => setRender({});\r\n\r\n  const [insertBack, setInsertBack] = useState(\"\");\r\n  const [insertFront, setInsertFront] = useState(\"\");\r\n  const [insertAfterValue, setInsertAfterValue] = useState(\"\");\r\n  const [insertAfterIdx, setInsertAfterIdx] = useState(\"\");\r\n  const [deleteIndex, setDeleteIndex] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const createHandler = () => {\r\n    let head = parseInt(prompt(\"Enter Head Value\"));\r\n    if (!isNaN(head)) {\r\n      const temp = new SLinkedList(head);\r\n      setSll(temp);\r\n      setIsStart(true);\r\n      setData(temp.display());\r\n    }\r\n    forceRerender();\r\n  };\r\n\r\n  // ---------------------------------------------\r\n\r\n  const insertBackChangeHandler = (e) => {\r\n    let data = e.target.value;\r\n    setInsertBack(data);\r\n  };\r\n  const insertBackHandler = (e) => {\r\n    if (e) e.preventDefault();\r\n    sll.insertBack(insertBack);\r\n    updateData();\r\n  };\r\n\r\n  // ---------------------------------------------\r\n\r\n  const insertFrontChangeHandler = (e) => {\r\n    let data = e.target.value;\r\n    setInsertFront(data);\r\n  };\r\n  const insertFrontHandler = (e) => {\r\n    e.preventDefault();\r\n    sll.insertFront(insertFront);\r\n    updateData();\r\n  };\r\n\r\n  // ---------------------------------------------\r\n\r\n  const insertAfterValueChangeHandler = (e) => {\r\n    let data = e.target.value;\r\n    setInsertAfterValue(data);\r\n  };\r\n  const insertAfterIndexChangeHandler = (e) => {\r\n    let data = e.target.value;\r\n    setInsertAfterIdx(data);\r\n  };\r\n  const insertAfterHandler = (e) => {\r\n    e.preventDefault();\r\n    sll.insertAfter(insertAfterIdx, insertAfterValue);\r\n    updateData();\r\n  };\r\n\r\n  // ---------------------------------------------\r\n  const deleteIndexChangeHandler = (e) => {\r\n    let data = e.target.value;\r\n    setDeleteIndex(data);\r\n  };\r\n  const deleteIndexHandler = (e) => {\r\n    e.preventDefault();\r\n    sll.delete(deleteIndex);\r\n    updateData();\r\n  };\r\n\r\n  // ---------------------------------------------\r\n\r\n  const updateData = () => {\r\n    setInsertBack(\"\");\r\n    setInsertFront(\"\");\r\n    setInsertAfterValue(\"\");\r\n    setInsertAfterIdx(\"\");\r\n    setDeleteIndex(\"\");\r\n    setData(sll.display());\r\n  };\r\n\r\n  const reverse = () => {\r\n    sll.Reverse();\r\n    updateData();\r\n  };\r\n\r\n  const clearHandler = () => {\r\n    setData(null);\r\n    setIsStart(false);\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container  d-flex align-items-center justify-content-center\"\r\n      style={{ height: \"90vh\" }}\r\n    >\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Welcome to Single Linked List\"\r\n        content=\"Click on the Create Button at the bottom left corner of screen and you are ready to play with linked list.\"\r\n      />\r\n\r\n      {sll && data && (\r\n        <Tree\r\n          data={data}\r\n          height={200}\r\n          width={1200}\r\n          animated={true}\r\n          nodeShape=\"rect\"\r\n          nodeProps={{ rx: 2 }}\r\n          duration={500}\r\n          svgProps={{\r\n            transform: \"rotate(0)\",\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <Information codeData={codeData.sll} />\r\n      <div className=\"controlls-container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"row justify-content-md-center\">\r\n            {!isStart && (\r\n              <div className=\"col-1\">\r\n                <Button\r\n                  onClick={createHandler}\r\n                  className=\"Button\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  Create\r\n                </Button>\r\n              </div>\r\n            )}\r\n            {isStart && (\r\n              <div className=\"col-3\">\r\n                <form onSubmit={insertBackHandler}>\r\n                  <div className=\"align-items-center controlHandler\">\r\n                    <div className=\"col-6\">\r\n                      <input\r\n                        placeholder=\"value\"\r\n                        className=\"pl-2\"\r\n                        onChange={insertBackChangeHandler}\r\n                        value={insertBack}\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <Button\r\n                        className=\"Button\"\r\n                        variant=\"outlined\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Insert Back\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {isStart && (\r\n              <div className=\"col-3\">\r\n                <form onSubmit={insertFrontHandler}>\r\n                  <div className=\"align-items-center controlHandler\">\r\n                    <div className=\"col-6\">\r\n                      <input\r\n                        placeholder=\"value\"\r\n                        onChange={insertFrontChangeHandler}\r\n                        value={insertFront}\r\n                        className=\"pl-2\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                      <Button\r\n                        className=\"Button\"\r\n                        variant=\"outlined\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Insert Front\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {isStart && (\r\n              <div className=\" col-4\">\r\n                <form onSubmit={insertAfterHandler}>\r\n                  <div className=\"align-items-center controlHandler\">\r\n                    <div className=\" col-4 mr-1\">\r\n                      <input\r\n                        onChange={insertAfterIndexChangeHandler}\r\n                        value={insertAfterIdx}\r\n                        className=\"pl-2\"\r\n                        placeholder=\"Index\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col-4 ml-1\">\r\n                      <input\r\n                        onChange={insertAfterValueChangeHandler}\r\n                        value={insertAfterValue}\r\n                        className=\"pl-2\"\r\n                        placeholder=\"Value\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <Button\r\n                        className=\"Button\"\r\n                        variant=\"outlined\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Insert After\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {isStart && (\r\n              <div className=\"mt-3 col-3\">\r\n                <form onSubmit={deleteIndexHandler}>\r\n                  <div className=\"align-items-center controlHandler\">\r\n                    <div className=\"col-8\">\r\n                      <input\r\n                        onChange={deleteIndexChangeHandler}\r\n                        value={deleteIndex}\r\n                        className=\"pl-2\"\r\n                        placeholder=\"Index\"\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                      <Button\r\n                        className=\"Button\"\r\n                        variant=\"outlined\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n\r\n            {isStart && (\r\n              <div className=\"text-center mt-3 col-2\">\r\n                <Button\r\n                  className=\"Button\"\r\n                  variant=\"outlined\"\r\n                  onClick={clearHandler}\r\n                >\r\n                  Clear\r\n                </Button>\r\n              </div>\r\n            )}\r\n\r\n            {isStart && (\r\n              <div className=\"text-center  mt-3 col-1\">\r\n                <Button onClick={reverse} className=\"Button\" variant=\"outlined\">\r\n                  Reverse\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleLinkedList;\r\n","import React from \"react\";\r\n\r\nconst ArrayElement = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={props.elementClass} key={props.key}>\r\n        <p className=\"heading\">{props.value}</p>\r\n      </div>\r\n      <p\r\n        style={{\r\n          color: \"red\",\r\n          textAlign: \"center\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"18px\",\r\n          backgroundColor: \"#f7f3eb\",\r\n        }}\r\n      >\r\n        {props.elementIndex}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArrayElement;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles({\r\n  root: {\r\n    transition: \"all 0.5s ease-out\",\r\n  },\r\n  titleColorBg: {\r\n    backgroundColor: \"#275070\",\r\n    color: \"yellow\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  contentColor: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    letterSpacing: \"2px\",\r\n  },\r\n});\r\n\r\nexport default function Warning({ open, handleClose, title, content }) {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={\"xs\"}\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      className={classes.root}\r\n    >\r\n      <div className={classes.titleColorBg}>\r\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            className={classes.contentColor}\r\n            id=\"alert-dialog-description\"\r\n          >\r\n            {content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            className={classes.titleColorBg}\r\n            autoFocus\r\n          >\r\n            ok\r\n          </Button>\r\n        </DialogActions>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\n\r\nimport Information from \"../../material-ui-components/information\";\r\n\r\nimport { ColorIndicator } from \"../sorting-algorithm/colorIndicator/colorIndicator\";\r\nimport \"./array.css\";\r\nimport ArrayElement from \"./element/ArrayElement\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Warning from \"../errorMessage/Warning\";\r\n\r\nimport codeData from \"../../data\";\r\n\r\nconst InitialElements = 15;\r\n\r\nconst Arr = () => {\r\n  const initialColor = \"rgb(63, 81, 181)\";\r\n  const considerColor = \"#ff931e\";\r\n  const minElementColor = \"#5C038C\";\r\n  const maxElementColor = \"#1B1734\";\r\n\r\n  const [noElement, setNoElement] = useState(InitialElements - 1);\r\n  // arrat for storing element\r\n  const [elements, setElements] = useState([]);\r\n\r\n  // index\r\n  const [index, setIndex] = useState(\"\");\r\n  const newIndex = (event) => {\r\n    setIndex(event.target.value);\r\n  };\r\n  // value\r\n  const [newElement, setNewElement] = useState(\"\");\r\n  const newInput = (event) => {\r\n    setNewElement(event.target.value);\r\n  };\r\n\r\n  // index for delete\r\n  const [deleteIndex, setDeleteIndex] = useState(\"\");\r\n\r\n  const newDeleteIndex = (event) => {\r\n    setDeleteIndex(event.target.value);\r\n  };\r\n\r\n  // generate random elements\r\n  const generateRandomElements = (start, end) => {\r\n    return Math.floor(Math.random() * (end - start - 1) + start);\r\n  };\r\n  //   generate array of random elements\r\n  const generateRandomArray = () => {\r\n    const temp = [];\r\n    for (let i = 0; i <= noElement; i++) {\r\n      temp[i] = generateRandomElements(10, 100);\r\n    }\r\n    setElements(temp);\r\n  };\r\n\r\n  //   Call once while loading page\r\n  useEffect(() => {\r\n    generateRandomArray();\r\n  }, []);\r\n\r\n  // Toggle Welcom\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(!open);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  // Warning Message\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [warningOpen, setWarningOpen] = useState(false);\r\n\r\n  const handleWarning = () => {\r\n    setWarningOpen(!warningOpen);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  //   Heighlighting sorted\r\n  const heighlightAction = (index, delay, color) => {\r\n    const bar = document.getElementsByClassName(\"array-element\");\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n    }, delay);\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n      bar[index].style.backgroundColor = initialColor;\r\n    }, 150 * delay);\r\n  };\r\n\r\n  // const addElement = () => {};\r\n  const addElement = (idx) => {\r\n    let delay = 1;\r\n    let i;\r\n    for (i = 0; i < idx; i++) {\r\n      heighlightAction(i, delay++, \"red\");\r\n      delay++;\r\n    }\r\n    setTimeout(() => {\r\n      if (i === idx) {\r\n        heighlightAction(idx, delay--, \"#32CD30\");\r\n        // Insert;\r\n        setNoElement(noElement + 1);\r\n        setElements((oldItems) => {\r\n          return [\r\n            ...oldItems,\r\n            elements.splice(idx, 0, parseInt(newElement)).pop(),\r\n          ];\r\n        });\r\n      }\r\n    }, 150 * delay);\r\n  };\r\n  const handleNewInput = () => {\r\n    if (isNaN(newElement) && isNaN(index)) {\r\n      setErrorMessage(\"Incorrect Element & Incorrect Index\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n      setIndex(\"\");\r\n    } else if (isNaN(index) || index > elements.length) {\r\n      setErrorMessage(\"Incorrect Index\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n      setIndex(\"\");\r\n    } else if (isNaN(newElement)) {\r\n      setErrorMessage(\"Please Enter Numbers\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n      setIndex(\"\");\r\n    } else if (parseInt(newElement) > 999) {\r\n      setErrorMessage(\"Pleasse Enter Value Smaller or Equal to 999\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n      setIndex(\"\");\r\n    } else {\r\n      addElement(parseInt(index));\r\n      setNewElement(\"\");\r\n      setIndex(\"\");\r\n    }\r\n  };\r\n\r\n  // Delete Element\r\n  const deleteFromIndex = (idx) => {\r\n    let delay = 1;\r\n    let i;\r\n    for (i = 0; i < idx; i++) {\r\n      heighlightAction(i, delay++, \"red\");\r\n      delay++;\r\n    }\r\n    if (i === idx)\r\n      setTimeout(() => {\r\n        heighlightAction(idx, delay, considerColor);\r\n        setTimeout(() => {\r\n          setElements((oldItems) => {\r\n            return [...oldItems.filter((ele, i) => i !== idx)];\r\n          });\r\n          setNoElement(noElement - 1);\r\n          // setErrorMessage(`No Elements : ${elements.length - 1}`);\r\n        }, 150 * delay);\r\n      }, 200 * delay);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (isNaN(deleteIndex)) {\r\n      setErrorMessage(\"Please Enter Positive Integer Value.\");\r\n      setWarningOpen(!warningOpen);\r\n      setDeleteIndex(\"\");\r\n    }\r\n    if (deleteIndex > elements.length - 1 || deleteIndex < 0) {\r\n      setErrorMessage(\"Incorrect Index\");\r\n      setWarningOpen(!warningOpen);\r\n      setDeleteIndex(\"\");\r\n    } else {\r\n      deleteFromIndex(parseInt(deleteIndex));\r\n      setDeleteIndex(\"\");\r\n    }\r\n  };\r\n\r\n  // find Min\r\n  const findMin = () => {\r\n    let min = elements[0];\r\n    let delay = 2;\r\n    let i;\r\n    let index;\r\n    for (i = 0; i <= noElement; i++) {\r\n      heighlightAction(i, delay++, \"red\");\r\n      if (elements[i] <= min) {\r\n        min = elements[i];\r\n        index = i;\r\n      }\r\n      delay++;\r\n    }\r\n    setTimeout(() => {\r\n      heighlightAction(index, delay + 20, minElementColor);\r\n    }, 150 * delay);\r\n  };\r\n  // Max Elemenet\r\n  const findMax = () => {\r\n    let max = -9007199254740991;\r\n    let delay = 2;\r\n    let i;\r\n    let index;\r\n    for (i = 0; i <= noElement; i++) {\r\n      heighlightAction(i, delay++, \"red\");\r\n      if (elements[i] > max) {\r\n        max = elements[i];\r\n        index = i;\r\n      }\r\n      delay++;\r\n    }\r\n    setTimeout(() => {\r\n      heighlightAction(index, delay + 20, maxElementColor);\r\n    }, 150 * delay);\r\n  };\r\n\r\n  // Remove Duplicate\r\n  const removeDuplicate = () => {\r\n    let i, j;\r\n    let delay = 1;\r\n    for (i = 0; i <= noElement; i++) {\r\n      for (j = i + 1; j <= noElement; j++) {\r\n        if (elements[j] === elements[i]) {\r\n          heighlightAction(i, 10, \"Green\");\r\n          heighlightAction(j, 5, \"Black\");\r\n          let delidx = j;\r\n          setTimeout(() => {\r\n            setElements((oldItems) => {\r\n              return [...oldItems.filter((ele, idx) => idx !== delidx)];\r\n            });\r\n            setNoElement(noElement - 1);\r\n          }, 150 * 5);\r\n        }\r\n        delay++;\r\n      }\r\n    }\r\n\r\n    // setTimeout(() => {\r\n    //   heighlightAction(idx, delay + 20, maxElementColor);\r\n    //   // console.log(max);\r\n    // }, 150 * delay);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Welcome to Array\"\r\n        content=\"An array is a data structure that contains a group of elements. Typically these elements are all of the same data type, such as an integer or string. Arrays are commonly used in computer programs to organize data so that a related set of values can be easily sorted or searched.\"\r\n      />\r\n\r\n      {/* Erroe Message */}\r\n      <Warning\r\n        open={warningOpen}\r\n        handleClose={handleWarning}\r\n        title=\"Warning\"\r\n        content={errorMessage}\r\n      />\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"Array\", color: initialColor },\r\n          { name: \"No of Steps\", color: \"red\" },\r\n          { name: \"Consider\", color: considerColor },\r\n          { name: \"Action\", color: \"#32CD30\" },\r\n          { name: \"Min\", color: minElementColor },\r\n          { name: \"Max\", color: maxElementColor },\r\n        ]}\r\n      />\r\n      <hr />\r\n      <div className=\" array-container d-flex align-items-center justify-content-center\">\r\n        <div className=\"array d-flex\">\r\n          {elements.map((value, idx) => {\r\n            if (value != null)\r\n              return (\r\n                <>\r\n                  <ArrayElement\r\n                    elementClass=\"array-element\"\r\n                    key={idx}\r\n                    value={value}\r\n                    elementIndex={idx}\r\n                  />\r\n                </>\r\n              );\r\n          })}\r\n        </div>\r\n        <hr />\r\n        <Information codeData={codeData.array} />\r\n        <div className=\"controlls-container\">\r\n          <div className=\"d-flex align-items-center col-sm-4 controlHandler\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"index\"\r\n              id=\"index\"\r\n              onChange={newIndex}\r\n              value={index}\r\n              placeholder=\"Index\"\r\n              className=\"pl-2\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"customInput\"\r\n              id=\"customInput\"\r\n              onChange={newInput}\r\n              value={newElement}\r\n              placeholder=\"Value\"\r\n              className=\"pl-2\"\r\n            />\r\n            <Button\r\n              className=\"Button\"\r\n              varient=\"outlined\"\r\n              onClick={handleNewInput}\r\n            >\r\n              Insert\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-3 controlHandler\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"index\"\r\n              id=\"index\"\r\n              onChange={newDeleteIndex}\r\n              value={deleteIndex}\r\n              placeholder=\"Index\"\r\n              className=\"pl-2\"\r\n            />\r\n            <Button\r\n              className=\"Button\"\r\n              variant=\"outlined\"\r\n              onClick={handleDelete}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-1\">\r\n            <Button className=\"Button\" varient=\"outlined\" onClick={findMin}>\r\n              Find Min\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-1\">\r\n            <Button className=\"Button\" varient=\"outlined\" onClick={findMax}>\r\n              Find Max\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-2\">\r\n            <Button\r\n              className=\"Button\"\r\n              varient=\"outlined\"\r\n              onClick={removeDuplicate}\r\n            >\r\n              Remove Duplicate\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arr;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\n\r\nconst FeedbackForm = () => {\r\n  const backend = \"https://datalgo.herokuapp.com/\";\r\n  const [email, setEmail] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [err, setErr] = useState([]);\r\n  const [done, setDone] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [wait, setWait] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSuccessClose = () => {\r\n    setDone(false);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleDesChange = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    setWait(true);\r\n    e.preventDefault();\r\n    const url = backend + \"feedback/create\";\r\n    const method = \"POST\";\r\n    try {\r\n      const result = await fetch(url, {\r\n        method: method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          description: description,\r\n        }),\r\n      });\r\n      const responseJson = await result.json();\r\n      if (responseJson.error) {\r\n        let display = \"\";\r\n        responseJson.desc.forEach((item) => {\r\n          display += `${item.param} : ${item.msg}`;\r\n        });\r\n        setErr(display);\r\n        setWait(false);\r\n        setOpen(true);\r\n      } else {\r\n        setWait(false);\r\n        setDone(true);\r\n      }\r\n    } catch (e) {\r\n      setErr(e);\r\n      setWait(false);\r\n      setOpen(true);\r\n    }\r\n\r\n    setEmail(\"\");\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundImage: `url(${\"https://cdn.pixabay.com/photo/2020/02/27/08/47/sunset-4883881_1280.jpg\"})`,\r\n        overflow: \"hidden\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      {err.length > 0 && (\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Error\"\r\n          content={err}\r\n        />\r\n      )}\r\n      {done && (\r\n        <AlertDialog\r\n          open={done}\r\n          handleClose={handleSuccessClose}\r\n          title=\"Thanks for providing feedback\"\r\n          content={\"feedback\"}\r\n        />\r\n      )}\r\n      <form onSubmit={handleSubmit} style={{ padding: \"300px 500px\" }}>\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"email\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            placeholder=\"name@example.com\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"description\">\r\n            How we can improve ?\r\n          </label>\r\n          <textarea\r\n            onChange={handleDesChange}\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            rows=\"3\"\r\n            value={description}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          {wait ? <CircularProgress color=\"secondary\" /> : \"Send\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackForm;\r\n","// import { SignalCellularConnectedNoInternet4BarTwoTone } from \"@material-ui/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\nimport { ColorIndicator } from \"../sorting-algorithm/colorIndicator/colorIndicator\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport Information from \"../../material-ui-components/information\";\r\nimport \"./stack.css\";\r\nimport Warning from \"../errorMessage/Warning\";\r\nimport codeData from \"./../../data\";\r\n\r\nconst InitialElements = 5;\r\nconst maxElements = 10;\r\nconst Stack = () => {\r\n  // aray for holding stack elements\r\n  const [elements, setElements] = useState([]);\r\n  //   Range of elements\r\n  const [noElement, setNoElement] = useState(InitialElements - 1);\r\n  //   New Element\r\n  const [newElement, setNewElement] = useState();\r\n  const newElementFound = (event) => {\r\n    setNewElement(event.target.value);\r\n  };\r\n  // generate random elements\r\n  const generateRandomElements = (start, end) => {\r\n    return Math.floor(Math.random() * (end - start - 1) + start);\r\n  };\r\n  //   generate array of random elements\r\n  const generateRandomArray = () => {\r\n    const temp = [];\r\n    for (let i = 0; i <= noElement; i++) {\r\n      let temps = generateRandomElements(10, 100);\r\n      if (temp.indexOf(temps) === -1) temp.push(temps);\r\n    }\r\n    setElements(temp);\r\n    setNoElement(noElement + 1);\r\n  };\r\n  //   Call once while loading page\r\n  useEffect(() => {\r\n    generateRandomArray();\r\n  }, []);\r\n\r\n  //   Welcome\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Warning Message\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [warningOpen, setWarningOpen] = useState(false);\r\n\r\n  const handleWarning = () => {\r\n    setWarningOpen(!warningOpen);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const heighlightAction = (index, delay, color) => {\r\n    const bar = document.getElementsByClassName(\"element\");\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n    }, delay);\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n      bar[index].style.backgroundColor = \"rgb(63, 81, 181)\";\r\n    }, 150 * delay);\r\n  };\r\n\r\n  //   Push Element\r\n  const pushElement = () => {\r\n    setTimeout(() => {\r\n      setElements((oldItems) => {\r\n        return [...oldItems, parseInt(newElement)];\r\n      });\r\n      heighlightAction(elements.length, 5, \"#32CD30\");\r\n    }, 150 * 2);\r\n  };\r\n\r\n  const handlePush = () => {\r\n    if (isNaN(newElement) || newElement == \"\") {\r\n      setErrorMessage(\"Pleasse Enter Numeric Value\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n    } else if (parseInt(newElement) > 1000) {\r\n      setErrorMessage(\"Pleasse Enter Smaller Value\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n    } else if (elements.length < maxElements) {\r\n      pushElement();\r\n      setNewElement(\"\");\r\n    } else {\r\n      setErrorMessage(\"Stack is Full\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n    }\r\n  };\r\n\r\n  //   popElement\r\n  const popElement = () => {\r\n    // setTimeout(() => {\r\n    setTimeout(() => {\r\n      setElements((oldItems) => {\r\n        return [...oldItems.filter((ele, i) => i !== elements.length - 1)];\r\n      });\r\n    }, 200 * 2);\r\n    heighlightAction(elements.length - 1, 1.5, \"red\");\r\n    // }, 100 * 2);\r\n  };\r\n\r\n  const handlePop = () => {\r\n    if (elements.length - 1 >= 0) {\r\n      popElement();\r\n    } else {\r\n      setErrorMessage(\"Stack is Empty\");\r\n      setWarningOpen(!warningOpen);\r\n      setNewElement(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Welcome to Stack\"\r\n        content=\"In computing, a stack is a data structure used to store a collection of objects. Individual items can be added and stored in a stack using a push operation. Objects can be retrieved using a pop operation, which removes an item from the stack.\"\r\n      />\r\n      {/* Erroe Message */}\r\n      <Warning\r\n        open={warningOpen}\r\n        handleClose={handleWarning}\r\n        title=\"Warning\"\r\n        content={errorMessage}\r\n      />\r\n\r\n      <div className=\"container mx-auto stack-container d-flex justify-content-center\">\r\n        <div className=\"stack d-flex flex-column-reverse justify-content-start align-items-center\">\r\n          {elements.map((value, idx) => {\r\n            if (value !== null && !value.isNaN)\r\n              return (\r\n                <>\r\n                  <div className=\"element-box\">\r\n                    <p className=\"m-0\">\r\n                      {idx === elements.length - 1 ? \"Top\" : \"\"}\r\n                    </p>\r\n                    <div\r\n                      className=\"element d-flex align-items-center justify-content-center\"\r\n                      key={idx}\r\n                    >\r\n                      <p className=\"m-0\">{value}</p>\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              );\r\n          })}\r\n        </div>\r\n        <hr />\r\n        <Information codeData={codeData.stack} />\r\n        <div className=\"controlls-container\">\r\n          <div className=\"col-sm-3 controlHandler\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"customInput\"\r\n              id=\"customInput\"\r\n              onChange={newElementFound}\r\n              value={newElement}\r\n              placeholder=\"Value\"\r\n              className=\"pl-2\"\r\n            />\r\n            <Button className=\"Button\" variant=\"outlined\" onClick={handlePush}>\r\n              Push\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-1 text-center\">\r\n            <Button className=\"Button\" variant=\"outlined\" onClick={handlePop}>\r\n              Pop\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-2 text-center\">\r\n            <Button\r\n              className=\"Button\"\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                if (elements.length === maxElements) {\r\n                  setErrorMessage(\"True\");\r\n                  setWarningOpen(!warningOpen);\r\n                } else {\r\n                  setErrorMessage(\"False\");\r\n                  setWarningOpen(!warningOpen);\r\n                }\r\n              }}\r\n            >\r\n              Is Full ?\r\n            </Button>\r\n          </div>\r\n          <div className=\"col-sm-2\">\r\n            <Button\r\n              className=\"Button\"\r\n              variant=\"outlined\"\r\n              onClick={() => {\r\n                if (elements.length === 0) {\r\n                  setErrorMessage(\"True\");\r\n                  setWarningOpen(!warningOpen);\r\n                } else {\r\n                  setErrorMessage(\"False\");\r\n                  setWarningOpen(!warningOpen);\r\n                }\r\n              }}\r\n            >\r\n              Is Empty ?\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stack;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst SignupForm = (props) => {\r\n  const backend = \"https://datalgo.herokuapp.com/\";\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [err, setErr] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [wait, setWait] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    setWait(true);\r\n    e.preventDefault();\r\n    const url = backend + \"auth/signup\";\r\n    const method = \"PUT\";\r\n    try {\r\n      const result = await fetch(url, {\r\n        method: method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          name: name,\r\n          password: password,\r\n        }),\r\n      });\r\n      const responseJson = await result.json();\r\n      if (responseJson.error) {\r\n        let display = \"\";\r\n        responseJson.error.forEach((item) => {\r\n          display += `${item.param} : ${item.msg}  `;\r\n        });\r\n        setErr(display);\r\n        setOpen(true);\r\n      } else {\r\n        toast.success(`Your Account Has Been Created`);\r\n        toast.info(`You are redirecting to Login`);\r\n        props.history.push(\"/login\");\r\n      }\r\n      setWait(false);\r\n    } catch (e) {\r\n      setWait(false);\r\n      setErr(e);\r\n      setOpen(true);\r\n    }\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundImage: `url(${\"https://cdn.pixabay.com/photo/2018/09/08/09/48/tulips-3662183_1280.jpg\"})`,\r\n        overflow: \"hidden\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      {err.length > 0 && (\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Error\"\r\n          content={err}\r\n        />\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} style={{ padding: \"300px 500px\" }}>\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"email\">\r\n            Email Address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            placeholder=\"name@example.com\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n            autoComplete={false}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"name\">\r\n            Full Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={handleNameChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          {wait ? <CircularProgress color=\"secondary\" /> : \"Signup\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            props.history.push(\"/login\");\r\n          }}\r\n          className=\"ml-2 btn btn-info\"\r\n        >\r\n          Already have an account\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\n\r\nconst LoginForm = (props) => {\r\n  const backend = \"https://datalgo.herokuapp.com/\";\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [err, setErr] = useState([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [wait, setWait] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(false);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    setWait(true);\r\n    e.preventDefault();\r\n    const url = backend + \"auth/login\";\r\n    const method = \"POST\";\r\n    try {\r\n      const result = await fetch(url, {\r\n        method: method,\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      });\r\n      const responseJson = await result.json();\r\n      if (responseJson.error) {\r\n        setErr(responseJson.message);\r\n        console.log(responseJson);\r\n        setWait(false);\r\n        setOpen(true);\r\n        return;\r\n      }\r\n      localStorage.setItem(\"token\", responseJson.token);\r\n      setWait(false);\r\n      toast.success(`You are logged in`);\r\n      props.history.push(\"/\");\r\n    } catch (e) {\r\n      setErr(e);\r\n      setWait(false);\r\n      setOpen(true);\r\n    }\r\n\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        backgroundImage: `url(${\"https://cdn.pixabay.com/photo/2019/11/28/07/21/butterfly-4658565_1280.jpg\"})`,\r\n        overflow: \"hidden\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Error\"\r\n        content={err}\r\n      />\r\n\r\n      <form onSubmit={handleSubmit} style={{ padding: \"300px 500px\" }}>\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"email\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            placeholder=\"name@example.com\"\r\n            value={email}\r\n            onChange={handleEmailChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"text-light h2\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          {wait ? <CircularProgress color=\"secondary\" /> : \"Login\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            props.history.push(\"/signup\");\r\n          }}\r\n          className=\"ml-2 btn btn-info\"\r\n        >\r\n          don't have an account, Create one\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Logout = (props) => {\r\n  localStorage.removeItem(\"token\");\r\n  toast.success(`You are logged out`);\r\n  props.history.push(\"/feedback\");\r\n  return <></>;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AlertDialog from \"../../../material-ui-components/alertDialog\";\r\nimport Information from \"../../../material-ui-components/information\";\r\nimport ArrayElement from \"../../array/element/ArrayElement\";\r\nimport { ColorIndicator } from \"../../sorting-algorithm/colorIndicator/colorIndicator\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport codeData from \"./../../../data\";\r\n\r\nconst InitialElements = 15;\r\nconst LinearSearch = () => {\r\n  const initialColor = \"rgb(63, 81, 181)\";\r\n  const considerColor = \"#ff931e\";\r\n  const minElementColor = \"#5C038C\";\r\n  const maxElementColor = \"#1B1734\";\r\n\r\n  // Arrya fro storing elements\r\n  const [elements, setElements] = useState([]);\r\n  // Element to be searched\r\n  const [newElement, setNewElement] = useState(\"\");\r\n  const newElementInput = (event) => {\r\n    let abc = parseInt(event.target.value);\r\n    setNewElement(abc);\r\n  };\r\n\r\n  //   ---------------\r\n\r\n  // generate random elements\r\n  const generateRandomElements = (start, end) => {\r\n    return Math.floor(Math.random() * (end - start - 1) + start);\r\n  };\r\n  //   generate array of random elements\r\n  const generateRandomArray = () => {\r\n    const temp = [];\r\n    for (let i = 0; i < InitialElements; i++) {\r\n      temp[i] = generateRandomElements(10, 100);\r\n    }\r\n    setElements(temp);\r\n  };\r\n\r\n  //   Call once while loading page\r\n  useEffect(() => {\r\n    generateRandomArray();\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //   ------------------\r\n\r\n  // Animation\r\n  const heighlightAction = (index, delay, color) => {\r\n    const bar = document.getElementsByClassName(\"array-element\");\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n    }, delay);\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n      bar[index].style.backgroundColor = initialColor;\r\n    }, 150 * delay);\r\n  };\r\n\r\n  //   Search\r\n  const searchElement = () => {\r\n    let i,\r\n      delay = 1;\r\n\r\n    for (i = 0; i < InitialElements; i++) {\r\n      heighlightAction(i, delay, \"red\");\r\n      delay++;\r\n      if (elements[i] === newElement) {\r\n        setTimeout(() => {\r\n          heighlightAction(i, 20, \"rgb(5,25,45)\");\r\n        }, 150 * delay);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (newElement === \"\") {\r\n      alert(\"Enter Element\");\r\n      setNewElement(\"\");\r\n    } else if (isNaN(newElement)) {\r\n      alert(\"Please Enter Integer Value\");\r\n      setNewElement(\"\");\r\n    } else {\r\n      searchElement();\r\n      setNewElement(\"\");\r\n    }\r\n  };\r\n  //   ----\r\n  return (\r\n    <div className=\"container\">\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"Array\", color: initialColor },\r\n          { name: \"No of Steps\", color: \"red\" },\r\n          { name: \"Consider\", color: considerColor },\r\n          { name: \"Action\", color: \"#32CD30\" },\r\n          { name: \"Min\", color: minElementColor },\r\n          { name: \"Max\", color: maxElementColor },\r\n        ]}\r\n      />\r\n      <hr />\r\n      <div className=\"container mt-5 d-flex justify-content-center\">\r\n        <AlertDialog\r\n          open={open}\r\n          handleClose={handleClose}\r\n          title=\"Welcome to Linear Search\"\r\n          content=\" Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis commodi molestiae accusamus? Quis tempore tempora at distinctio explicabo cumque amet, perferendis rem iste qui voluptate maxime sed obcaecati inventore accusamus.\"\r\n        />\r\n        <div className=\"container\">\r\n          <div className=\"array d-flex\">\r\n            {elements.map((value, idx) => {\r\n              if (value != null)\r\n                return (\r\n                  <>\r\n                    <ArrayElement\r\n                      elementClass=\"array-element\"\r\n                      key={idx}\r\n                      value={value}\r\n                      elementIndex={idx}\r\n                    />\r\n                  </>\r\n                );\r\n            })}\r\n          </div>\r\n          <Information codeData={codeData.ls} />\r\n          <div className=\"controlls-container w-100\">\r\n            <div className=\"d-flex align-items-center col-sm-3 controlHandler\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"index\"\r\n                id=\"index\"\r\n                onChange={newElementInput}\r\n                value={newElement}\r\n                placeholder=\"Search Element \"\r\n                className=\"pl-2\"\r\n              />\r\n              <Button\r\n                className=\"Button\"\r\n                variant=\"outlined\"\r\n                onClick={handleSearch}\r\n              >\r\n                Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinearSearch;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { FaMale, FaFemale, FaArrowLeft } from \"react-icons/fa\";\r\nimport { ColorIndicator } from \"../sorting-algorithm/colorIndicator/colorIndicator\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AlertDialog from \"../../material-ui-components/alertDialog\";\r\nimport Warning from \"../errorMessage/Warning\";\r\n\r\nimport \"./que.css\";\r\nimport Information from \"../../material-ui-components/information\";\r\nimport codeData from \"./../../data\";\r\nconst maxMembers = 10;\r\nconst Que = () => {\r\n  const initialColor = \"rgb(63, 81, 181)\";\r\n  const maleColor = \"#FBEAFF\";\r\n  const femaleColor = \"#FBEAFF\";\r\n  const dequeueColor = \"red\";\r\n  const enqueueColor = \"#250B65\";\r\n\r\n  const [elements, setElements] = useState([\r\n    <FaMale className=\"male\" />,\r\n    <FaFemale className=\"female\" />,\r\n    <FaMale className=\"male\" />,\r\n    <FaFemale className=\"female\" />,\r\n    <FaMale className=\"male\" />,\r\n  ]);\r\n\r\n  //   Welcome\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // Warning Message\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [warningOpen, setWarningOpen] = useState(false);\r\n\r\n  const handleWarning = () => {\r\n    setWarningOpen(!warningOpen);\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const heighlightAction = (index, delay, color) => {\r\n    const bar = document.getElementsByClassName(\"queue-element\");\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n    }, delay);\r\n    setTimeout(() => {\r\n      bar[index].style.backgroundColor = color;\r\n      bar[index].style.backgroundColor = initialColor;\r\n    }, 150 * delay);\r\n  };\r\n\r\n  //   Male\r\n  const enqueueMale = () => {\r\n    let delay = 1;\r\n    let i;\r\n    for (i = 0; i < elements.length; i++) {\r\n      // heighlightAction(i, delay++, \"red\");\r\n      delay++;\r\n    }\r\n\r\n    if (i < maxMembers) {\r\n      setTimeout(() => {\r\n        heighlightAction(i, 3, enqueueColor);\r\n\r\n        setElements((oldItems) => {\r\n          return [...oldItems, <FaMale className=\"male\" />];\r\n        });\r\n        //   }\r\n      }, 150 * 2.5);\r\n    } else {\r\n      setErrorMessage(\"Queue is Full\");\r\n      setWarningOpen(!warningOpen);\r\n    }\r\n  };\r\n\r\n  //   Female\r\n  const enqueueFeMale = () => {\r\n    let delay = 1;\r\n    let i;\r\n    for (i = 0; i < elements.length; i++) {\r\n      // heighlightAction(i, delay++, \"red\");\r\n      delay++;\r\n    }\r\n    if (i < maxMembers) {\r\n      setTimeout(() => {\r\n        heighlightAction(i, 3, enqueueColor);\r\n\r\n        setElements((oldItems) => {\r\n          return [...oldItems, <FaFemale className=\"female\" />];\r\n        });\r\n        //   }\r\n      }, 150 * 2.5);\r\n    } else {\r\n      setErrorMessage(\"Queue is Full\");\r\n      setWarningOpen(!warningOpen);\r\n    }\r\n  };\r\n\r\n  //   Dequeue\r\n  const deQueue = () => {\r\n    if (elements.length - 1 >= 0) {\r\n      heighlightAction(0, 2, dequeueColor);\r\n      setTimeout(() => {\r\n        // setTimeout(() => {\r\n        setElements((oldItems) => {\r\n          return [...oldItems.filter((ele, i) => i !== 0)];\r\n        });\r\n        // }, 400 * 2);\r\n      }, 200 * 2);\r\n    } else {\r\n      setErrorMessage(\"Queue is Empty\");\r\n      setWarningOpen(!warningOpen);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Welcome to Queue\"\r\n        content=\"An array is a data structure that contains a group of elements. Typically these elements are all of the same data type, such as an integer or string. Arrays are commonly used in computer programs to organize data so that a related set of values can be easily sorted or searched.\"\r\n      />\r\n      <ColorIndicator\r\n        indicator={[\r\n          { name: \"Queue\", color: initialColor },\r\n          { name: \"Male\", color: maleColor },\r\n          { name: \"Female\", color: femaleColor },\r\n          { name: \"Enqueue\", color: enqueueColor },\r\n          { name: \"Dequeue\", color: dequeueColor },\r\n        ]}\r\n      />\r\n      <AlertDialog\r\n        open={open}\r\n        handleClose={handleClose}\r\n        title=\"Queue\"\r\n        content=\"A collection of items in which only the earliest added item may be accessed. Basic operations are add (to the tail) or enqueue and delete (from the head) or dequeue. Delete returns the item removed. Also known as `first-in, first-out` or FIFO.\"\r\n      />\r\n      <Information codeData={codeData.queue} />\r\n      {/* Erroe Message */}\r\n      <Warning\r\n        open={warningOpen}\r\n        handleClose={handleWarning}\r\n        title=\"Warning\"\r\n        content={errorMessage}\r\n      />\r\n      <hr />\r\n      <div className=\"container m-0 queue-container d-flex align-items-center justify-content-center\">\r\n        <div class=\"queue\">\r\n          {elements.map((val, i) => {\r\n            let arrow;\r\n\r\n            if (i < elements.length - 1) {\r\n              arrow = <FaArrowLeft />;\r\n            }\r\n            return (\r\n              <>\r\n                <div className=\"queue-element\">{val}</div>\r\n                <div className=\"queue-pointer\">{arrow}</div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"controlls-container\">\r\n          <div className=\"d-flex align-items-center col-sm-2 controlHandler\">\r\n            <Button className=\"Button\" onClick={enqueueMale}>\r\n              Enqueue Male\r\n            </Button>\r\n          </div>\r\n          <div className=\"d-flex align-items-center col-sm-2 controlHandler\">\r\n            <Button\r\n              className=\"Button\"\r\n              variant=\"outlined\"\r\n              onClick={enqueueFeMale}\r\n            >\r\n              Enqueue Female\r\n            </Button>\r\n          </div>\r\n          <div className=\"d-flex align-items-center col-sm-2 controlHandler\">\r\n            <Button className=\"Button\" variant=\"outlined\" onClick={deQueue}>\r\n              Dequeue\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Que;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nexport default function SimpleMenu({ name, array, fun }) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        {name}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {array.map((item) => {\r\n          return (\r\n            <MenuItem onClick={() => fun(item.link)}>{item.title}</MenuItem>\r\n          );\r\n        })}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Code from \"@material-ui/icons/Code\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport Home from \"@material-ui/icons/Home\";\r\nimport Account from \"@material-ui/icons/AccountBox\";\r\nimport Face from \"@material-ui/icons/Face\";\r\nimport NewReleasesTwoTone from \"@material-ui/icons/NewReleasesTwoTone\";\r\nimport PinDrop from \"@material-ui/icons/PinDrop\";\r\nimport QuestionAnswer from \"@material-ui/icons/QuestionAnswer\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport SimpleAccordion from \"./accordian\";\r\n\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport BinarySearch from \"../components/search-algorithm/BinarySearch/binary-search\";\r\nimport BubbleSort from \"./../components/sorting-algorithm/bubble-sort/bubble-sort\";\r\nimport InsertionSort from \"../components/sorting-algorithm/insertion-sort/insertion-sort\";\r\nimport SelectionSort from \"../components/sorting-algorithm/selection-sort/selection-sort\";\r\nimport QuickSort from \"../components/sorting-algorithm/quick-sort/quick-sort\";\r\nimport Homepage from \"./../homepage/homepage\";\r\nimport PathFinding from \"./../components/path-finding/path-finding\";\r\nimport BinaryTree from \"../components/tree/BinaryTree\";\r\nimport AVLTrees from \"../components/avl-tree/AVLTrees\";\r\nimport SingleLinkedList from \"../components/singleLinkedList/singleLinkedList\";\r\nimport Arr from \"../components/array/Array\";\r\nimport Editor from \"../components/code-editor/editor\";\r\n\r\nimport FeedbackForm from \"../components/feedback-form/common/feedback\";\r\n\r\nimport Stack from \"../components/stack/Stack\";\r\nimport SignupForm from \"../components/feedback-form/common/signup\";\r\nimport LoginForm from \"../components/feedback-form/common/login\";\r\nimport Logout from \"../components/feedback-form/common/logout\";\r\nimport LinearSearch from \"../components/search-algorithm/LinearSearch/LinearSearch\";\r\nimport Que from \"../components/que/Que\";\r\nimport SimpleMenu from \"./menu\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: \"#0C6170\",\r\n    height: \"70px\",\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    marginTop: \"20px\",\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function DrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [login, setLogin] = useState();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    setLogin(token);\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  window.addEventListener(\"keydown\", (e) => {\r\n    if (e.key === \"Tab\") {\r\n      setOpen(!open);\r\n    }\r\n  });\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [themeBack, setTheme] = useState(\"\");\r\n\r\n  const changeTheme = (t) => {\r\n    setTheme(t);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{\r\n        height: \"100vh\",\r\n        backgroundImage: `url(${themeBack})`,\r\n        backgroundSize: \"cover\",\r\n        overflowX: \"hidden\",\r\n      }}\r\n    >\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            DatAlgo - A tool to Visualize Data Structure & Algorithm\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key={\"\"}>\r\n            <ListItemIcon>\r\n              <Home />\r\n            </ListItemIcon>\r\n            <Link\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                fontSize: \"15px\",\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              Home\r\n            </Link>\r\n          </ListItem>\r\n\r\n          {!login ? (\r\n            <>\r\n              <ListItem button key={\"\"}>\r\n                <ListItemIcon>\r\n                  <Account />\r\n                </ListItemIcon>\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"black\",\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                  to=\"/signup\"\r\n                >\r\n                  Signup\r\n                </Link>\r\n              </ListItem>\r\n              <ListItem button key={\"\"}>\r\n                <ListItemIcon>\r\n                  <Face />\r\n                </ListItemIcon>\r\n                <Link\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"black\",\r\n                    fontSize: \"15px\",\r\n                  }}\r\n                  to=\"/login\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </ListItem>\r\n            </>\r\n          ) : (\r\n            <ListItem button key={\"\"}>\r\n              <ListItemIcon>\r\n                <PinDrop />\r\n              </ListItemIcon>\r\n              <Link\r\n                style={{\r\n                  textDecoration: \"none\",\r\n                  color: \"black\",\r\n                  fontSize: \"15px\",\r\n                }}\r\n                to=\"/logout\"\r\n              >\r\n                Logout\r\n              </Link>\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n        <Divider />\r\n        <Divider />\r\n        <List>\r\n          <ListItem>\r\n            <ListItemIcon>\r\n              <NewReleasesTwoTone />\r\n            </ListItemIcon>\r\n            <SimpleMenu\r\n              name=\"Select Theme\"\r\n              array={[\r\n                { title: \"None\", link: \"\" },\r\n                {\r\n                  title: \"Paper\",\r\n                  link: \"https://cdn.pixabay.com/photo/2016/06/20/13/42/paper-1468878_1280.jpg\",\r\n                },\r\n                {\r\n                  title: \"Paper Old\",\r\n                  link: \"https://cdn.pixabay.com/photo/2015/12/03/08/50/paper-1074131_1280.jpg\",\r\n                },\r\n                {\r\n                  title: \"Textile : Jute\",\r\n                  link: \"https://cdn.pixabay.com/photo/2017/11/04/21/09/textile-2918844_1280.jpg\",\r\n                },\r\n                {\r\n                  title: \"Wall\",\r\n                  link: \"https://cdn.pixabay.com/photo/2016/02/23/07/37/wall-1217083_1280.jpg\",\r\n                },\r\n              ]}\r\n              fun={changeTheme}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key={\"\"}>\r\n            <ListItemIcon>\r\n              <Code />\r\n            </ListItemIcon>\r\n            <Link\r\n              style={{\r\n                textDecoration: \"none\",\r\n                color: \"black\",\r\n                fontSize: \"15px\",\r\n              }}\r\n              to=\"/code-editor\"\r\n            >\r\n              Online Code Editor\r\n            </Link>\r\n          </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <Divider />\r\n        <List>\r\n          <SimpleAccordion\r\n            name=\"Array\"\r\n            array={[{ target: \"/array\", name: \"Array\" }]}\r\n          ></SimpleAccordion>\r\n\r\n          <SimpleAccordion\r\n            name=\"Stack\"\r\n            array={[{ target: \"/stack\", name: \"Stack\" }]}\r\n          ></SimpleAccordion>\r\n\r\n          <SimpleAccordion\r\n            name=\"Queue\"\r\n            array={[{ target: \"/queue\", name: \"Queue\" }]}\r\n          ></SimpleAccordion>\r\n\r\n          <SimpleAccordion\r\n            name=\"Linked List\"\r\n            array={[{ target: \"/single-LL\", name: \"Single Linked List\" }]}\r\n          ></SimpleAccordion>\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          <Divider />\r\n          <Divider />\r\n\r\n          <SimpleAccordion\r\n            name=\"Search Algorithms\"\r\n            array={[\r\n              { target: \"/LinearSearch\", name: \"Linear Search\" },\r\n              { target: \"/binary-search\", name: \"Binary Search\" },\r\n            ]}\r\n          ></SimpleAccordion>\r\n\r\n          <SimpleAccordion\r\n            name=\"Sorting Algorithms\"\r\n            array={[\r\n              { target: \"/bubble-sort\", name: \"Bubble Sort\" },\r\n              { target: \"/insertion-search\", name: \"Insertion Sort\" },\r\n              { target: \"/selection-search\", name: \"Selection Sort\" },\r\n              { target: \"/quick-search\", name: \"Quick Sort\" },\r\n            ]}\r\n          ></SimpleAccordion>\r\n\r\n          <SimpleAccordion\r\n            name=\"Tree Algorithm\"\r\n            array={[\r\n              { target: \"/binary-tree\", name: \"Binary Tree & Traversals\" },\r\n              { target: \"/avl-tree\", name: \"AVL Tree\" },\r\n            ]}\r\n          ></SimpleAccordion>\r\n\r\n          <SimpleAccordion\r\n            name=\"Path Finding Algorithm\"\r\n            array={[{ target: \"/path-finding\", name: \"Dijkstra Algorithm\" }]}\r\n          ></SimpleAccordion>\r\n        </List>\r\n        <ListItem button key={\"\"}>\r\n          <ListItemIcon>\r\n            <QuestionAnswer />\r\n          </ListItemIcon>\r\n          <Link\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"black\",\r\n              fontSize: \"15px\",\r\n            }}\r\n            to=\"/feedback\"\r\n          >\r\n            Feedback\r\n          </Link>\r\n        </ListItem>\r\n      </Drawer>\r\n\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <Switch>\r\n          <Route path=\"/array\" component={Arr} />\r\n          <Route path=\"/stack\" component={Stack} />\r\n          <Route path=\"/queue\" component={Que} />\r\n\r\n          <Route path=\"/binary-search\" component={BinarySearch} />\r\n          <Route path=\"/LinearSearch\" component={LinearSearch} />\r\n\r\n          <Route path=\"/bubble-sort\" component={BubbleSort} />\r\n          <Route path=\"/insertion-search\" component={InsertionSort} />\r\n          <Route path=\"/selection-search\" component={SelectionSort} />\r\n          <Route path=\"/quick-search\" component={QuickSort} />\r\n\r\n          <Route path=\"/path-finding\" component={PathFinding} />\r\n          <Route path=\"/binary-tree\" component={BinaryTree} />\r\n          <Route path=\"/avl-tree\" component={AVLTrees} />\r\n          <Route path=\"/code-editor\" component={Editor} />\r\n          <Route path=\"/single-LL\" component={SingleLinkedList} />\r\n\r\n          <Route path=\"/signup\" component={SignupForm} />\r\n          <Route path=\"/login\" component={LoginForm} />\r\n          <Route path=\"/feedback\" component={FeedbackForm} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n\r\n          <Route path=\"/\" component={Homepage} />\r\n        </Switch>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport DrawerLeft from \"./material-ui-components/drawer\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer />\r\n        <DrawerLeft />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"../src/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}